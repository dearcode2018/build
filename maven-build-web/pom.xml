<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.hua</groupId>
	<artifactId>maven-build-web</artifactId>
	<version>0.0.1</version>
	<packaging>war</packaging>
	<name>maven-build-web</name>
	<properties>
		<!-- 传参方式: 
		mvn <阶段...> -Dname=value
		mvn <阶段...> -Denv=xx  -->
		<env>dev</env>	
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jdk.version>1.8</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.version>0.0.1</maven.version>
		<maven.plugin.compiler.version>3.3</maven.plugin.compiler.version>
		<maven.plugin.source.version>2.4</maven.plugin.source.version>
		<maven.plugin.surefire.version>2.18.1</maven.plugin.surefire.version>
		<maven.plugin.assembly.version>2.5.5</maven.plugin.assembly.version>
		<maven.plugin.resources.version>2.7</maven.plugin.resources.version>
		<maven.plugin.dependency.version>2.10</maven.plugin.dependency.version>
		<maven.plugin.war.version>3.0</maven.plugin.war.version>		
		<tomcat.plugin.version>3.0-r1756463</tomcat.plugin.version>
		<jetty.plugin.version>9.4.12.v20180830</jetty.plugin.version>
		<web.version>0.0.1</web.version>
	</properties>

	<!-- 公共构建 -->
	<build>
		<!-- 过滤器，key=value，对需要过滤的文件进行value的替换 -->
		<filters>
			<filter>src/main/resources/filter/filter-${env}.properties</filter>
		</filters>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<!-- 排除过滤器文件，无需执行过滤 -->
				<excludes>
					<exclude>*/filter-*.properties</exclude>
				</excludes>
			</resource>
		</resources>	
	
		<plugins>

			<!-- 编译插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.plugin.compiler.version}</version>
				<configuration>
					<compilerVersion>${jdk.version}</compilerVersion>
					<!-- 编译的类文件是否包含调试信息 -->
					<debug>true</debug>
					<!-- 是否展示详细的设置信息 -->
					<detail>true</detail>
					<!-- 指定编译文件的编码 -->
					<encoding>${project.build.sourceEncoding}</encoding>
					<!-- 编译失败是否停止 -->
					<failOnError>true</failOnError>
					<!-- 是否强制jdk版本 -->
					<forceJavacCompilerUse>true</forceJavacCompilerUse>
					<!-- 是否分开执行编译，设置为true会导致部分输出中文乱码 -->
					<fork>false</fork>
					<!-- 输出源码文件名 -->
					<outputFileName>a.jar</outputFileName>
					<!-- 源码位置是否显示过期api被使用 -->
					<showDeprecation>true</showDeprecation>
					<!-- 是否输出编译警告 -->
					<showWarnings>false</showWarnings>
					<!-- 忽略测试 -->
					<skip>true</skip>
					<!-- 是否忽略main源码 -->
					<skipMain>false</skipMain>
					<!-- main编译器版本 source 和 target 要保持一致 -->
					<source>${jdk.version}</source>
					<!-- main编译器版本 source 和 target 要保持一致 -->
					<target>${jdk.version}</target>
					<!-- 测试编译器版本 source 和 target 要保持一致 -->
					<testSource>${jdk.version}</testSource>
					<!-- 测试编译器版本 source 和 target 要保持一致 -->
					<testTarget>${jdk.version}</testTarget>
					<!-- 输出编译器详细运行信息 -->
					<verbose>false</verbose>

				</configuration>
			</plugin>

			<!-- 资源插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.plugin.resources.version}</version>
				<configuration>
					<!-- 指定文件的编码 -->
					<encoding>${project.build.sourceEncoding}</encoding>
					<!-- 包含空目录 -->
					<includeEmptyDirs>true</includeEmptyDirs>
					<!-- 是否直接覆盖 -->
					<overwrite>true</overwrite>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>resources</goal>
						</goals>
						<configuration>
							<includeEmptyDirs>true</includeEmptyDirs>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- 打包插件，打包当前项目相关文件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.plugin.surefire.version}</version>
				<configuration>
					<!-- 解决 控制台输出测试信息 - 乱码 -->
					<argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>
					<reuseForks>true</reuseForks>
					<!-- 打包时跳过单元测试 -->
					<skip>true</skip>
					<skipTests>true</skipTests>
					<!-- 忽略测试失败 -->
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>

			<!-- 解决 web项目pom.xml报错 -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<version>${maven.plugin.war.version}</version>
				</configuration>
			</plugin>

			<!-- 测试用例插件，打包当前项目相关文件 -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.plugin.surefire.version}</version>
				<configuration>
					<!-- 解决 控制台输出测试信息 - 乱码 -->
					<argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>
					<encoding>${project.build.sourceEncoding}</encoding>				
					<!-- 指定main排除的文件 (暂时无法实现) -->	
					<excludes>
						<exclude>/src/main/java/template/**/*</exclude>
					</excludes>
					<reuseForks>true</reuseForks>
					<!-- 打包时跳过单元测试 -->
					<skip>true</skip>
					<skipTests>true</skipTests>
					<!-- 忽略测试失败 -->
					<testFailureIgnore>true</testFailureIgnore>
					<!-- 工作目录，${basedir} -->
<!-- 					<workingDirectory></workingDirectory> -->
				</configuration>
			</plugin>	
			
			<!-- 部署插件 (部署到开发环境) 执行 
			首次部署: mvn tomcat7:deploy 
			再次部署: mvn tomcat7:redeploy
			tomca7.x 8.x 9.x 均可执行tomcat7插件的指令
			上传接口:  http://172.25.32.85:7070/manager/text/deploy?path=webapp&update=true
			-->
			<plugin>
			    <groupId>org.apache.tomcat.maven</groupId>
			    <artifactId>tomcat8-maven-plugin</artifactId>
			    <version>${tomcat.plugin.version}</version>
			    <configuration>
			    	<!--  -->
					<url>http://172.25.32.85:7070/manager/text</url>
					<username>tomcat</username>
					<password>tomcat</password>
					<update>true</update>
					<!-- 项目名称，若在ROOT下则为单个斜杠 -->
					<path>/maven-build-web</path>
			    </configuration>
			</plugin>	
			
			<!-- jetty 插件，运行 mvn jetty:run -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.plugin.version}</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<!-- jetty 端口 -->
					<httpConnector>
						<!-- 只能部署到本地 -->
						<!-- <host>192.168.5.2</host> -->
		<!-- 				<host>127.0.0.1</host> -->
						<port>8080</port>
					</httpConnector>
				</configuration>
			</plugin>
		
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>com.hua</groupId>
			<artifactId>web</artifactId>
			<version>${web.version}</version>
		</dependency>
		
	</dependencies>

	<profiles>
		<profile>
			<id>test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<echo>Using test properties</echo>
										<copy file="src/main/resources/filter/filter-test.properties" tofile="${project.build.outputDirectory}/test.properties" overwrite="true" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>xxxxxx1221</id>
			<activation>
				<!-- 通过操作系统环境自动激活 -->
				<os>
					<name>Windows 7</name>
					<family>Windows</family>
					<version>xx</version>
				</os>
				<!-- 区间表示 大于等于1.5，小于1.9 -->
				<jdk>[15,1.9)</jdk>
			</activation>
			
		</profile>
	
		<profile>
			<id>fileExist</id>
			<!-- 文件 存在 或 不存在 激活 -->
			<activation>
<!-- 				<file>
					<missing>/data/a.log</missing>
				</file> -->
				<!-- 默认是激活的 -->
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<echo>file not exist</echo>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>			
		</profile>
		
	</profiles>


<!-- 上传构件到 nexus Hosted仓库 -->
	<distributionManagement>
		<repository>
			<!-- 对应 maven settings.xml中的 server的id，server中配置了帐号/密码 -->
			<id>nexus</id>
			<name>company nexus repository.hosted repository</name>
			<uniqueVersion>false</uniqueVersion>
			<!-- 远程仓库的地址 -->
			<url>http://172.25.38.70:8081/nexus/content/repositories/myrepo</url>
		</repository>
	</distributionManagement>
	
	<!-- 插件仓库配置 -->
	<pluginRepositories>
		<pluginRepository>
			<id>alfresco-public</id>
			<name>alfresco-public</name>
			<url>https://artifacts.alfresco.com/nexus/content/groups/public</url>
		</pluginRepository>
	
		<pluginRepository>
			<id>alfresco-public-snapshots</id>
			<url>https://artifacts.alfresco.com/nexus/content/groups/public-snapshots</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
		</pluginRepository>
	
		<pluginRepository>
			<id>beardedgeeks-releases</id>
			<url>http://beardedgeeks.googlecode.com/svn/repository/releases</url>
		</pluginRepository>  	
		  
	</pluginRepositories>	


</project>
