<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.5 -->

<plugin>
  <name>Apache Maven Dependency Plugin</name>
  <description>Provides utility goals to work with dependencies like copying, unpacking, analyzing, resolving and many more.</description>
  <groupId>org.apache.maven.plugins</groupId>
  <artifactId>maven-dependency-plugin</artifactId>
  <version>3.1.2</version>
  <goalPrefix>dependency</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>analyze</goal>
      <description>Analyzes the dependencies of this project and determines which are: used and declared; used and undeclared; unused
and declared. This goal is intended to be used standalone, thus it always executes the &lt;code&gt;test-compile&lt;/code&gt;
phase - use the &lt;code&gt;dependency:analyze-only&lt;/code&gt; goal instead when participating in the build lifecycle.
&lt;p&gt;
By default, &lt;a href=&quot;http://maven.apache.org/shared/maven-dependency-analyzer/&quot;&gt;maven-dependency-analyzer&lt;/a&gt; is used
to perform the analysis, with limitations due to the fact that it works at bytecode level, but any analyzer can be
plugged in through &lt;code&gt;analyzer&lt;/code&gt; parameter.
&lt;/p&gt;</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <executePhase>test-compile</executePhase>
      <implementation>org.apache.maven.plugins.dependency.analyze.AnalyzeMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.0-alpha-3</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>analyzer</name>
          <type>java.lang.String</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify the project dependency analyzer to use (plexus component role-hint). By default,
&lt;a href=&quot;/shared/maven-dependency-analyzer/&quot;&gt;maven-dependency-analyzer&lt;/a&gt; is used. To use this, you must declare
a dependency for this plugin that contains the code for the analyzer. The analyzer must have a declared Plexus
role name, and you specify the role name here.</description>
        </parameter>
        <parameter>
          <name>baseDir</name>
          <type>java.io.File</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>false</editable>
          <description>Flag to use for scriptable output</description>
        </parameter>
        <parameter>
          <name>failOnWarning</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to fail the build if a dependency warning is found.</description>
        </parameter>
        <parameter>
          <name>ignoreNonCompile</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Ignore Runtime/Provided/Test/System scopes for unused dependency analysis.</description>
        </parameter>
        <parameter>
          <name>ignoredDependencies</name>
          <type>java.lang.String[]</type>
          <since>2.10</since>
          <required>false</required>
          <editable>true</editable>
          <description>List of dependencies that will be ignored. Any dependency on this list will be excluded from the &quot;declared but
unused&quot; and the &quot;used but undeclared&quot; list. The filter syntax is:

&lt;pre&gt;
[groupId]:[artifactId]:[type]:[version]
&lt;/pre&gt;

where each pattern segment is optional and supports full and partial &lt;code&gt;*&lt;/code&gt; wildcards. An empty pattern
segment is treated as an implicit wildcard. *
&lt;p&gt;
For example, &lt;code&gt;org.apache.*&lt;/code&gt; will match all artifacts whose group id starts with
&lt;code&gt;org.apache.&lt;/code&gt;, and &lt;code&gt;:::*-SNAPSHOT&lt;/code&gt; will match all snapshot artifacts.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>ignoredUnusedDeclaredDependencies</name>
          <type>java.lang.String[]</type>
          <since>2.10</since>
          <required>false</required>
          <editable>true</editable>
          <description>List of dependencies that will be ignored if they are declared but unused. The filter syntax is:

&lt;pre&gt;
[groupId]:[artifactId]:[type]:[version]
&lt;/pre&gt;

where each pattern segment is optional and supports full and partial &lt;code&gt;*&lt;/code&gt; wildcards. An empty pattern
segment is treated as an implicit wildcard. *
&lt;p&gt;
For example, &lt;code&gt;org.apache.*&lt;/code&gt; will match all artifacts whose group id starts with
&lt;code&gt;org.apache.&lt;/code&gt;, and &lt;code&gt;:::*-SNAPSHOT&lt;/code&gt; will match all snapshot artifacts.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>ignoredUsedUndeclaredDependencies</name>
          <type>java.lang.String[]</type>
          <since>2.10</since>
          <required>false</required>
          <editable>true</editable>
          <description>List of dependencies that will be ignored if they are used but undeclared. The filter syntax is:

&lt;pre&gt;
[groupId]:[artifactId]:[type]:[version]
&lt;/pre&gt;

where each pattern segment is optional and supports full and partial &lt;code&gt;*&lt;/code&gt; wildcards. An empty pattern
segment is treated as an implicit wildcard. *
&lt;p&gt;
For example, &lt;code&gt;org.apache.*&lt;/code&gt; will match all artifacts whose group id starts with
&lt;code&gt;org.apache.&lt;/code&gt;, and &lt;code&gt;:::*-SNAPSHOT&lt;/code&gt; will match all snapshot artifacts.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>false</editable>
          <description>Target folder</description>
        </parameter>
        <parameter>
          <name>outputXML</name>
          <type>boolean</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output the xml for the missing dependencies (used but not declared).</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project to analyze.</description>
        </parameter>
        <parameter>
          <name>scriptableFlag</name>
          <type>java.lang.String</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Flag to use for scriptable output.</description>
        </parameter>
        <parameter>
          <name>scriptableOutput</name>
          <type>boolean</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output scriptable values for the missing dependencies (used but not declared).</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>usedDependencies</name>
          <type>java.lang.String[]</type>
          <since>2.6</since>
          <required>false</required>
          <editable>true</editable>
          <description>Force dependencies as used, to override incomplete result caused by bytecode-level analysis. Dependency format is
&lt;code&gt;groupId:artifactId&lt;/code&gt;.</description>
        </parameter>
        <parameter>
          <name>verbose</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Output used dependencies.</description>
        </parameter>
      </parameters>
      <configuration>
        <analyzer implementation="java.lang.String" default-value="default">${analyzer}</analyzer>
        <baseDir implementation="java.io.File" default-value="${basedir}"/>
        <failOnWarning implementation="boolean" default-value="false">${failOnWarning}</failOnWarning>
        <ignoreNonCompile implementation="boolean" default-value="false">${ignoreNonCompile}</ignoreNonCompile>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}"/>
        <outputXML implementation="boolean" default-value="false">${outputXML}</outputXML>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <scriptableFlag implementation="java.lang.String" default-value="$$$%%%">${scriptableFlag}</scriptableFlag>
        <scriptableOutput implementation="boolean" default-value="false">${scriptableOutput}</scriptableOutput>
        <skip implementation="boolean" default-value="false">${mdep.analyze.skip}</skip>
        <verbose implementation="boolean" default-value="false">${verbose}</verbose>
      </configuration>
    </mojo>
    <mojo>
      <goal>analyze-dep-mgt</goal>
      <description>This mojo looks at the dependencies after final resolution and looks for mismatches in your dependencyManagement
section. In versions of maven prior to 2.0.6, it was possible to inherit versions that didn&apos;t match your
dependencyManagement. See &lt;a href=&quot;https://issues.apache.org/jira/browse/MNG-1577&quot;&gt;MNG-1577&lt;/a&gt; for more info. This
mojo is also useful for just detecting projects that override the dependencyManagement directly. Set ignoreDirect to
false to detect these otherwise normal conditions.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.maven.plugins.dependency.analyze.AnalyzeDepMgt</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.0-alpha-3</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>failBuild</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Fail the build if a problem is detected.</description>
        </parameter>
        <parameter>
          <name>ignoreDirect</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Ignore Direct Dependency Overrides of dependencyManagement section.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
      </parameters>
      <configuration>
        <failBuild implementation="boolean" default-value="false">${mdep.analyze.failBuild}</failBuild>
        <ignoreDirect implementation="boolean" default-value="true">${mdep.analyze.ignore.direct}</ignoreDirect>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <skip implementation="boolean" default-value="false">${mdep.analyze.skip}</skip>
      </configuration>
    </mojo>
    <mojo>
      <goal>analyze-duplicate</goal>
      <description>Analyzes the &lt;code&gt;&amp;lt;dependencies/&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;dependencyManagement/&amp;gt;&lt;/code&gt; tags in the
&lt;code&gt;pom.xml&lt;/code&gt; and determines the duplicate declared dependencies.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.maven.plugins.dependency.analyze.AnalyzeDuplicateMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project to analyze.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <skip implementation="boolean" default-value="false">${mdep.analyze.skip}</skip>
      </configuration>
    </mojo>
    <mojo>
      <goal>analyze-only</goal>
      <description>Analyzes the dependencies of this project and determines which are: used and declared; used and undeclared; unused
and declared. This goal is intended to be used in the build lifecycle, thus it assumes that the
&lt;code&gt;test-compile&lt;/code&gt; phase has been executed - use the &lt;code&gt;dependency:analyze&lt;/code&gt; goal instead when running
standalone.
&lt;p&gt;
By default, &lt;a href=&quot;http://maven.apache.org/shared/maven-dependency-analyzer/&quot;&gt;maven-dependency-analyzer&lt;/a&gt; is used
to perform the analysis, with limitations due to the fact that it works at bytecode level, but any analyzer can be
plugged in through &lt;code&gt;analyzer&lt;/code&gt; parameter.
&lt;/p&gt;</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>verify</phase>
      <implementation>org.apache.maven.plugins.dependency.analyze.AnalyzeOnlyMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.0</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>analyzer</name>
          <type>java.lang.String</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify the project dependency analyzer to use (plexus component role-hint). By default,
&lt;a href=&quot;/shared/maven-dependency-analyzer/&quot;&gt;maven-dependency-analyzer&lt;/a&gt; is used. To use this, you must declare
a dependency for this plugin that contains the code for the analyzer. The analyzer must have a declared Plexus
role name, and you specify the role name here.</description>
        </parameter>
        <parameter>
          <name>baseDir</name>
          <type>java.io.File</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>false</editable>
          <description>Flag to use for scriptable output</description>
        </parameter>
        <parameter>
          <name>failOnWarning</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to fail the build if a dependency warning is found.</description>
        </parameter>
        <parameter>
          <name>ignoreNonCompile</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Ignore Runtime/Provided/Test/System scopes for unused dependency analysis.</description>
        </parameter>
        <parameter>
          <name>ignoredDependencies</name>
          <type>java.lang.String[]</type>
          <since>2.10</since>
          <required>false</required>
          <editable>true</editable>
          <description>List of dependencies that will be ignored. Any dependency on this list will be excluded from the &quot;declared but
unused&quot; and the &quot;used but undeclared&quot; list. The filter syntax is:

&lt;pre&gt;
[groupId]:[artifactId]:[type]:[version]
&lt;/pre&gt;

where each pattern segment is optional and supports full and partial &lt;code&gt;*&lt;/code&gt; wildcards. An empty pattern
segment is treated as an implicit wildcard. *
&lt;p&gt;
For example, &lt;code&gt;org.apache.*&lt;/code&gt; will match all artifacts whose group id starts with
&lt;code&gt;org.apache.&lt;/code&gt;, and &lt;code&gt;:::*-SNAPSHOT&lt;/code&gt; will match all snapshot artifacts.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>ignoredUnusedDeclaredDependencies</name>
          <type>java.lang.String[]</type>
          <since>2.10</since>
          <required>false</required>
          <editable>true</editable>
          <description>List of dependencies that will be ignored if they are declared but unused. The filter syntax is:

&lt;pre&gt;
[groupId]:[artifactId]:[type]:[version]
&lt;/pre&gt;

where each pattern segment is optional and supports full and partial &lt;code&gt;*&lt;/code&gt; wildcards. An empty pattern
segment is treated as an implicit wildcard. *
&lt;p&gt;
For example, &lt;code&gt;org.apache.*&lt;/code&gt; will match all artifacts whose group id starts with
&lt;code&gt;org.apache.&lt;/code&gt;, and &lt;code&gt;:::*-SNAPSHOT&lt;/code&gt; will match all snapshot artifacts.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>ignoredUsedUndeclaredDependencies</name>
          <type>java.lang.String[]</type>
          <since>2.10</since>
          <required>false</required>
          <editable>true</editable>
          <description>List of dependencies that will be ignored if they are used but undeclared. The filter syntax is:

&lt;pre&gt;
[groupId]:[artifactId]:[type]:[version]
&lt;/pre&gt;

where each pattern segment is optional and supports full and partial &lt;code&gt;*&lt;/code&gt; wildcards. An empty pattern
segment is treated as an implicit wildcard. *
&lt;p&gt;
For example, &lt;code&gt;org.apache.*&lt;/code&gt; will match all artifacts whose group id starts with
&lt;code&gt;org.apache.&lt;/code&gt;, and &lt;code&gt;:::*-SNAPSHOT&lt;/code&gt; will match all snapshot artifacts.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>false</editable>
          <description>Target folder</description>
        </parameter>
        <parameter>
          <name>outputXML</name>
          <type>boolean</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output the xml for the missing dependencies (used but not declared).</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project to analyze.</description>
        </parameter>
        <parameter>
          <name>scriptableFlag</name>
          <type>java.lang.String</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Flag to use for scriptable output.</description>
        </parameter>
        <parameter>
          <name>scriptableOutput</name>
          <type>boolean</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output scriptable values for the missing dependencies (used but not declared).</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>usedDependencies</name>
          <type>java.lang.String[]</type>
          <since>2.6</since>
          <required>false</required>
          <editable>true</editable>
          <description>Force dependencies as used, to override incomplete result caused by bytecode-level analysis. Dependency format is
&lt;code&gt;groupId:artifactId&lt;/code&gt;.</description>
        </parameter>
        <parameter>
          <name>verbose</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Output used dependencies.</description>
        </parameter>
      </parameters>
      <configuration>
        <analyzer implementation="java.lang.String" default-value="default">${analyzer}</analyzer>
        <baseDir implementation="java.io.File" default-value="${basedir}"/>
        <failOnWarning implementation="boolean" default-value="false">${failOnWarning}</failOnWarning>
        <ignoreNonCompile implementation="boolean" default-value="false">${ignoreNonCompile}</ignoreNonCompile>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}"/>
        <outputXML implementation="boolean" default-value="false">${outputXML}</outputXML>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <scriptableFlag implementation="java.lang.String" default-value="$$$%%%">${scriptableFlag}</scriptableFlag>
        <scriptableOutput implementation="boolean" default-value="false">${scriptableOutput}</scriptableOutput>
        <skip implementation="boolean" default-value="false">${mdep.analyze.skip}</skip>
        <verbose implementation="boolean" default-value="false">${verbose}</verbose>
      </configuration>
    </mojo>
    <mojo>
      <goal>analyze-report</goal>
      <description>Analyzes the dependencies of this project and produces a report that summarizes which are: used and declared; used
and undeclared; unused and declared.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <executePhase>test-compile</executePhase>
      <implementation>org.apache.maven.plugins.dependency.analyze.AnalyzeReportMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.0-alpha-5</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>ignoreNonCompile</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Ignore Runtime/Provided/Test/System scopes for unused dependency analysis</description>
        </parameter>
        <parameter>
          <name>inputEncoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>Specifies the input encoding.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>false</editable>
          <description>Target folder</description>
        </parameter>
        <parameter>
          <name>outputEncoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>Specifies the output encoding.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project to analyze.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>usedDependencies</name>
          <type>java.lang.String[]</type>
          <since>2.6</since>
          <required>false</required>
          <editable>true</editable>
          <description>Force dependencies as used, to override incomplete result caused by bytecode-level analysis. Dependency format is
&lt;code&gt;groupId:artifactId&lt;/code&gt;.</description>
        </parameter>
      </parameters>
      <configuration>
        <ignoreNonCompile implementation="boolean" default-value="false">${ignoreNonCompile}</ignoreNonCompile>
        <inputEncoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${encoding}</inputEncoding>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}"/>
        <outputEncoding implementation="java.lang.String" default-value="${project.reporting.outputEncoding}">${outputEncoding}</outputEncoding>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <skip implementation="boolean" default-value="false">${mdep.analyze.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.shared.dependency.analyzer.ProjectDependencyAnalyzer</role>
          <field-name>analyzer</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.doxia.siterenderer.Renderer</role>
          <field-name>siteRenderer</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>build-classpath</goal>
      <description>This goal will output a classpath string of dependencies from the local repository to a file or log.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>generate-sources</phase>
      <implementation>org.apache.maven.plugins.dependency.fromDependencies.BuildClasspathMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.0-alpha-2</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>attach</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Attach the classpath file to the main artifact so it can be installed and deployed.</description>
        </parameter>
        <parameter>
          <name>classifier</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify classifier to look for. Example: sources</description>
        </parameter>
        <parameter>
          <name>excludeArtifactIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of Artifact names to exclude.</description>
        </parameter>
        <parameter>
          <name>excludeClassifiers</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Classifiers to exclude. Empty String indicates don&apos;t exclude anything (default).</description>
        </parameter>
        <parameter>
          <name>excludeGroupIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of GroupId Names to exclude.</description>
        </parameter>
        <parameter>
          <name>excludeScope</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Scope to exclude. An Empty string indicates no scopes (default).</description>
        </parameter>
        <parameter>
          <name>excludeTransitive</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If we should exclude transitive dependencies</description>
        </parameter>
        <parameter>
          <name>excludeTypes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Types to exclude. Empty String indicates don&apos;t exclude anything (default).</description>
        </parameter>
        <parameter>
          <name>fileSeparator</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Override the char used between the paths. This field is initialized to contain the first character of the value
of the system property file.separator. On UNIX systems the value of this field is &apos;/&apos;; on Microsoft Windows
systems it is &apos;\&apos;. The default is File.separator</description>
        </parameter>
        <parameter>
          <name>ignorePermissions</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>ignore to set file permissions when unpacking a dependency</description>
        </parameter>
        <parameter>
          <name>includeArtifactIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of Artifact names to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeClassifiers</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Classifiers to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeGroupIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of GroupIds to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeScope</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Scope to include. An Empty string indicates all scopes (default). The scopes being interpreted are the scopes as
Maven sees them, not as specified in the pom. In summary:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;runtime&lt;/code&gt; scope gives runtime and compile dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compile&lt;/code&gt; scope gives compile, provided, and system dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test&lt;/code&gt; (default) scope gives all dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;provided&lt;/code&gt; scope just gives provided dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system&lt;/code&gt; scope just gives system dependencies.&lt;/li&gt;
&lt;/ul&gt;</description>
        </parameter>
        <parameter>
          <name>includeTypes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Types to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>localRepoProperty</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Replace the absolute path to the local repo with this property. This field is ignored it prefix is declared. The
value will be forced to &quot;${M2_REPO}&quot; if no value is provided AND the attach flag is true.</description>
        </parameter>
        <parameter>
          <name>markersDirectory</name>
          <type>java.io.File</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Directory to store flag files</description>
        </parameter>
        <parameter>
          <name>outputAbsoluteArtifactFilename</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output absolute filename for resolved artifacts</description>
        </parameter>
        <parameter>
          <name>outputFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The file to write the classpath string. If undefined, it just prints the classpath as [INFO].</description>
        </parameter>
        <parameter>
          <name>outputFilterFile</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Write out the classpath in a format compatible with filtering (classpath=xxxxx)</description>
        </parameter>
        <parameter>
          <name>outputProperty</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>A property to set to the content of the classpath string.</description>
        </parameter>
        <parameter>
          <name>overWriteIfNewer</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite artifacts that don&apos;t exist or are older than the source.</description>
        </parameter>
        <parameter>
          <name>overWriteReleases</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite release artifacts</description>
        </parameter>
        <parameter>
          <name>overWriteSnapshots</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite snapshot artifacts</description>
        </parameter>
        <parameter>
          <name>pathSeparator</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Override the char used between path folders. The system-dependent path-separator character. This field is
initialized to contain the first character of the value of the system property path.separator. This character is
used to separate filenames in a sequence of files given as a path list. On UNIX systems, this character is &apos;:&apos;;
on Microsoft Windows systems it is &apos;;&apos;.</description>
        </parameter>
        <parameter>
          <name>prefix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The prefix to prepend on each dependent artifact. If undefined, the paths refer to the actual files store in the
local repository (the stripVersion parameter does nothing then).</description>
        </parameter>
        <parameter>
          <name>prependGroupId</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Prepend the groupId during copy.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>POM</description>
        </parameter>
        <parameter>
          <name>reactorProjects</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>Contains the full list of projects in the reactor.</description>
        </parameter>
        <parameter>
          <name>regenerateFile</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &apos;true&apos;, it skips the up-to-date-check, and always regenerates the classpath file.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>Remote repositories which will be searched for artifacts.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven session</description>
        </parameter>
        <parameter>
          <name>silent</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If the plugin should be silent.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>stripClassifier</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Strip artifact classifier during copy (only works if prefix is set)</description>
        </parameter>
        <parameter>
          <name>stripVersion</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Strip artifact version during copy (only works if prefix is set)</description>
        </parameter>
        <parameter>
          <name>type</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify type to look for when constructing artifact based on classifier. Example: java-source,jar,war</description>
        </parameter>
        <parameter>
          <name>useBaseVersion</name>
          <type>boolean</type>
          <since>2.6</since>
          <required>false</required>
          <editable>true</editable>
          <description>Either append the artifact&apos;s baseVersion or uniqueVersion to the filename. Will only be used if
{@link #isStripVersion()} is {@code false}.</description>
        </parameter>
        <parameter>
          <name>useJvmChmod</name>
          <type>boolean</type>
          <since>2.5.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
will use the jvm chmod, this is available for user and all level group level will be ignored
&lt;/p&gt;
&lt;b&gt;since 2.6 is on by default&lt;/b&gt;</description>
        </parameter>
      </parameters>
      <configuration>
        <attach implementation="boolean" default-value="false"/>
        <classifier implementation="java.lang.String" default-value="">${classifier}</classifier>
        <excludeArtifactIds implementation="java.lang.String" default-value="">${excludeArtifactIds}</excludeArtifactIds>
        <excludeClassifiers implementation="java.lang.String" default-value="">${excludeClassifiers}</excludeClassifiers>
        <excludeGroupIds implementation="java.lang.String" default-value="">${excludeGroupIds}</excludeGroupIds>
        <excludeScope implementation="java.lang.String" default-value="">${excludeScope}</excludeScope>
        <excludeTransitive implementation="boolean" default-value="false">${excludeTransitive}</excludeTransitive>
        <excludeTypes implementation="java.lang.String" default-value="">${excludeTypes}</excludeTypes>
        <fileSeparator implementation="java.lang.String" default-value="">${mdep.fileSeparator}</fileSeparator>
        <ignorePermissions implementation="boolean" default-value="false">${dependency.ignorePermissions}</ignorePermissions>
        <includeArtifactIds implementation="java.lang.String" default-value="">${includeArtifactIds}</includeArtifactIds>
        <includeClassifiers implementation="java.lang.String" default-value="">${includeClassifiers}</includeClassifiers>
        <includeGroupIds implementation="java.lang.String" default-value="">${includeGroupIds}</includeGroupIds>
        <includeScope implementation="java.lang.String" default-value="">${includeScope}</includeScope>
        <includeTypes implementation="java.lang.String" default-value="">${includeTypes}</includeTypes>
        <localRepoProperty implementation="java.lang.String" default-value="">${mdep.localRepoProperty}</localRepoProperty>
        <markersDirectory implementation="java.io.File" default-value="${project.build.directory}/dependency-maven-plugin-markers">${markersDirectory}</markersDirectory>
        <outputAbsoluteArtifactFilename implementation="boolean" default-value="false">${outputAbsoluteArtifactFilename}</outputAbsoluteArtifactFilename>
        <outputFile implementation="java.io.File">${mdep.outputFile}</outputFile>
        <outputFilterFile implementation="boolean" default-value="false">${mdep.outputFilterFile}</outputFilterFile>
        <outputProperty implementation="java.lang.String">${mdep.outputProperty}</outputProperty>
        <overWriteIfNewer implementation="boolean" default-value="true">${overWriteIfNewer}</overWriteIfNewer>
        <overWriteReleases implementation="boolean" default-value="false">${overWriteReleases}</overWriteReleases>
        <overWriteSnapshots implementation="boolean" default-value="false">${overWriteSnapshots}</overWriteSnapshots>
        <pathSeparator implementation="java.lang.String" default-value="">${mdep.pathSeparator}</pathSeparator>
        <prefix implementation="java.lang.String">${mdep.prefix}</prefix>
        <prependGroupId implementation="boolean" default-value="false">${mdep.prependGroupId}</prependGroupId>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <reactorProjects implementation="java.util.List" default-value="${reactorProjects}"/>
        <regenerateFile implementation="boolean" default-value="false">${mdep.regenerateFile}</regenerateFile>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <silent implementation="boolean" default-value="false">${silent}</silent>
        <skip implementation="boolean" default-value="false">${mdep.skip}</skip>
        <stripClassifier implementation="boolean" default-value="false">${mdep.stripClassifier}</stripClassifier>
        <stripVersion implementation="boolean" default-value="false">${mdep.stripVersion}</stripVersion>
        <type implementation="java.lang.String" default-value="">${type}</type>
        <useBaseVersion implementation="boolean" default-value="true">${mdep.useBaseVersion}</useBaseVersion>
        <useJvmChmod implementation="boolean" default-value="true">${dependency.useJvmChmod}</useJvmChmod>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.archiver.manager.ArchiverManager</role>
          <field-name>archiverManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.handler.manager.ArtifactHandlerManager</role>
          <field-name>artifactHandlerManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.dependencies.resolve.DependencyResolver</role>
          <field-name>dependencyResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.ProjectBuilder</role>
          <field-name>projectBuilder</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.repository.RepositoryManager</role>
          <field-name>repositoryManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>collect</goal>
      <description>&lt;p&gt;
Goal that collects the project dependencies from the repository. This goal requires Maven 3.0 or higher to function
because it uses &quot;requiresDependencyCollection&quot;. This means that it lists the groupId:artifactId:version information
by downloading the pom files without downloading the actual artifacts such as jar files.
&lt;/p&gt;
&lt;p&gt;
This is very useful when full dependency resolution might fail due to projects which haven&apos;t been built yet.
&lt;/p&gt;
&lt;p&gt;
It is identical to {@link ResolveDependenciesMojo} except for using the requiresDependencyCollection annotation
attribute instead of requiresDependencyResolution.
&lt;/p&gt;</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>generate-sources</phase>
      <implementation>org.apache.maven.plugins.dependency.resolvers.CollectDependenciesMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>3.0</since>
      <requiresDependencyCollection>test</requiresDependencyCollection>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>appendOutput</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to append outputs into the output file or overwrite it.</description>
        </parameter>
        <parameter>
          <name>classifier</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify classifier to look for. Example: sources</description>
        </parameter>
        <parameter>
          <name>excludeArtifactIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of Artifact names to exclude.</description>
        </parameter>
        <parameter>
          <name>excludeClassifiers</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Classifiers to exclude. Empty String indicates don&apos;t exclude anything (default).</description>
        </parameter>
        <parameter>
          <name>excludeGroupIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of GroupId Names to exclude.</description>
        </parameter>
        <parameter>
          <name>excludeReactor</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Don&apos;t resolve plugins that are in the current reactor.</description>
        </parameter>
        <parameter>
          <name>excludeScope</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Scope to exclude. An Empty string indicates no scopes (default).</description>
        </parameter>
        <parameter>
          <name>excludeTransitive</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If we should exclude transitive dependencies</description>
        </parameter>
        <parameter>
          <name>excludeTypes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Types to exclude. Empty String indicates don&apos;t exclude anything (default).</description>
        </parameter>
        <parameter>
          <name>ignorePermissions</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;i&gt;not used in this goal&lt;/i&gt;</description>
        </parameter>
        <parameter>
          <name>includeArtifactIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of Artifact names to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeClassifiers</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Classifiers to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeGroupIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of GroupIds to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeParents</name>
          <type>boolean</type>
          <since>2.8</since>
          <required>false</required>
          <editable>true</editable>
          <description>Include parent poms in the dependency resolution list.</description>
        </parameter>
        <parameter>
          <name>includeScope</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Scope to include. An Empty string indicates all scopes (default). The scopes being interpreted are the scopes as
Maven sees them, not as specified in the pom. In summary:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;runtime&lt;/code&gt; scope gives runtime and compile dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compile&lt;/code&gt; scope gives compile, provided, and system dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test&lt;/code&gt; (default) scope gives all dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;provided&lt;/code&gt; scope just gives provided dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system&lt;/code&gt; scope just gives system dependencies.&lt;/li&gt;
&lt;/ul&gt;</description>
        </parameter>
        <parameter>
          <name>includeTypes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Types to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>markersDirectory</name>
          <type>java.io.File</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Directory to store flag files</description>
        </parameter>
        <parameter>
          <name>outputAbsoluteArtifactFilename</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output absolute filename for resolved artifacts</description>
        </parameter>
        <parameter>
          <name>outputFile</name>
          <type>java.io.File</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If specified, this parameter will cause the dependencies to be written to the path specified, instead of writing
to the console.</description>
        </parameter>
        <parameter>
          <name>outputScope</name>
          <type>boolean</type>
          <since>2.0-alpha-2</since>
          <required>false</required>
          <editable>true</editable>
          <description>If we should display the scope when resolving</description>
        </parameter>
        <parameter>
          <name>overWriteIfNewer</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite artifacts that don&apos;t exist or are older than the source.</description>
        </parameter>
        <parameter>
          <name>overWriteReleases</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite release artifacts</description>
        </parameter>
        <parameter>
          <name>overWriteSnapshots</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite snapshot artifacts</description>
        </parameter>
        <parameter>
          <name>prependGroupId</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Prepend the groupId during copy.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>POM</description>
        </parameter>
        <parameter>
          <name>reactorProjects</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>Contains the full list of projects in the reactor.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>Remote repositories which will be searched for artifacts.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven session</description>
        </parameter>
        <parameter>
          <name>silent</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If the plugin should be silent.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>sort</name>
          <type>boolean</type>
          <since>2.8</since>
          <required>false</required>
          <editable>true</editable>
          <description>Sort the output list of resolved artifacts alphabetically. The default ordering matches the classpath order.</description>
        </parameter>
        <parameter>
          <name>type</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify type to look for when constructing artifact based on classifier. Example: java-source,jar,war</description>
        </parameter>
        <parameter>
          <name>useJvmChmod</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;i&gt;not used in this goal&lt;/i&gt;</description>
        </parameter>
      </parameters>
      <configuration>
        <appendOutput implementation="boolean" default-value="false">${appendOutput}</appendOutput>
        <classifier implementation="java.lang.String" default-value="">${classifier}</classifier>
        <excludeArtifactIds implementation="java.lang.String" default-value="">${excludeArtifactIds}</excludeArtifactIds>
        <excludeClassifiers implementation="java.lang.String" default-value="">${excludeClassifiers}</excludeClassifiers>
        <excludeGroupIds implementation="java.lang.String" default-value="">${excludeGroupIds}</excludeGroupIds>
        <excludeReactor implementation="boolean" default-value="true">${excludeReactor}</excludeReactor>
        <excludeScope implementation="java.lang.String" default-value="">${excludeScope}</excludeScope>
        <excludeTransitive implementation="boolean" default-value="false">${excludeTransitive}</excludeTransitive>
        <excludeTypes implementation="java.lang.String" default-value="">${excludeTypes}</excludeTypes>
        <includeArtifactIds implementation="java.lang.String" default-value="">${includeArtifactIds}</includeArtifactIds>
        <includeClassifiers implementation="java.lang.String" default-value="">${includeClassifiers}</includeClassifiers>
        <includeGroupIds implementation="java.lang.String" default-value="">${includeGroupIds}</includeGroupIds>
        <includeParents implementation="boolean" default-value="false">${includeParents}</includeParents>
        <includeScope implementation="java.lang.String" default-value="">${includeScope}</includeScope>
        <includeTypes implementation="java.lang.String" default-value="">${includeTypes}</includeTypes>
        <markersDirectory implementation="java.io.File" default-value="${project.build.directory}/dependency-maven-plugin-markers">${markersDirectory}</markersDirectory>
        <outputAbsoluteArtifactFilename implementation="boolean" default-value="false">${outputAbsoluteArtifactFilename}</outputAbsoluteArtifactFilename>
        <outputFile implementation="java.io.File">${outputFile}</outputFile>
        <outputScope implementation="boolean" default-value="true">${mdep.outputScope}</outputScope>
        <overWriteIfNewer implementation="boolean" default-value="true">${overWriteIfNewer}</overWriteIfNewer>
        <overWriteReleases implementation="boolean" default-value="false">${overWriteReleases}</overWriteReleases>
        <overWriteSnapshots implementation="boolean" default-value="false">${overWriteSnapshots}</overWriteSnapshots>
        <prependGroupId implementation="boolean" default-value="false">${mdep.prependGroupId}</prependGroupId>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <reactorProjects implementation="java.util.List" default-value="${reactorProjects}"/>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <silent implementation="boolean" default-value="false">${silent}</silent>
        <skip implementation="boolean" default-value="false">${mdep.skip}</skip>
        <sort implementation="boolean" default-value="false">${sort}</sort>
        <type implementation="java.lang.String" default-value="">${type}</type>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.archiver.manager.ArchiverManager</role>
          <field-name>archiverManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.handler.manager.ArtifactHandlerManager</role>
          <field-name>artifactHandlerManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.dependencies.resolve.DependencyResolver</role>
          <field-name>dependencyResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.ProjectBuilder</role>
          <field-name>projectBuilder</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.repository.RepositoryManager</role>
          <field-name>repositoryManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>copy</goal>
      <description>Goal that copies a list of artifacts from the repository to defined locations.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-sources</phase>
      <implementation>org.apache.maven.plugins.dependency.fromConfiguration.CopyMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>1.0</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>artifact</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The artifact to copy from command line. A string of the form groupId:artifactId:version[:packaging[:classifier]].
Use {@link #artifactItems} within the POM configuration.</description>
        </parameter>
        <parameter>
          <name>artifactItems</name>
          <type>java.util.List</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Collection of ArtifactItems to work on. (ArtifactItem contains groupId, artifactId, version, type, classifier,
outputDirectory, destFileName, overWrite and encoding.) See &lt;a href=&quot;./usage.html&quot;&gt;Usage&lt;/a&gt; for details.</description>
        </parameter>
        <parameter>
          <name>ignorePermissions</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;i&gt;not used in this goal&lt;/i&gt;</description>
        </parameter>
        <parameter>
          <name>localRepositoryDirectory</name>
          <type>java.io.File</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Path to override default local repository during plugin&apos;s execution. To remove all downloaded artifacts as part
of the build, set this value to a location under your project&apos;s target directory</description>
        </parameter>
        <parameter>
          <name>outputAbsoluteArtifactFilename</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output absolute filename for resolved artifacts</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Default output location used for mojo, unless overridden in ArtifactItem.</description>
        </parameter>
        <parameter>
          <name>overWriteIfNewer</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite if newer</description>
        </parameter>
        <parameter>
          <name>overWriteReleases</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite release artifacts</description>
        </parameter>
        <parameter>
          <name>overWriteSnapshots</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite snapshot artifacts</description>
        </parameter>
        <parameter>
          <name>prependGroupId</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Prepend artifact groupId during copy</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>POM</description>
        </parameter>
        <parameter>
          <name>reactorProjects</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>Contains the full list of projects in the reactor.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>Remote repositories which will be searched for artifacts.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven session</description>
        </parameter>
        <parameter>
          <name>silent</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If the plugin should be silent.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>stripClassifier</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Strip artifact classifier during copy</description>
        </parameter>
        <parameter>
          <name>stripVersion</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Strip artifact version during copy</description>
        </parameter>
        <parameter>
          <name>useBaseVersion</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Use artifact baseVersion during copy</description>
        </parameter>
        <parameter>
          <name>useJvmChmod</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;i&gt;not used in this goal&lt;/i&gt;</description>
        </parameter>
      </parameters>
      <configuration>
        <artifact implementation="java.lang.String">${artifact}</artifact>
        <outputAbsoluteArtifactFilename implementation="boolean" default-value="false">${outputAbsoluteArtifactFilename}</outputAbsoluteArtifactFilename>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}/dependency">${outputDirectory}</outputDirectory>
        <overWriteIfNewer implementation="boolean" default-value="true">${mdep.overIfNewer}</overWriteIfNewer>
        <overWriteReleases implementation="boolean" default-value="false">${mdep.overWriteReleases}</overWriteReleases>
        <overWriteSnapshots implementation="boolean" default-value="false">${mdep.overWriteSnapshots}</overWriteSnapshots>
        <prependGroupId implementation="boolean" default-value="false">${mdep.prependGroupId}</prependGroupId>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <reactorProjects implementation="java.util.List" default-value="${reactorProjects}"/>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <silent implementation="boolean" default-value="false">${silent}</silent>
        <skip implementation="boolean" default-value="false">${mdep.skip}</skip>
        <stripClassifier implementation="boolean" default-value="false">${mdep.stripClassifier}</stripClassifier>
        <stripVersion implementation="boolean" default-value="false">${mdep.stripVersion}</stripVersion>
        <useBaseVersion implementation="boolean" default-value="false">${mdep.useBaseVersion}</useBaseVersion>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.archiver.manager.ArchiverManager</role>
          <field-name>archiverManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.handler.manager.ArtifactHandlerManager</role>
          <field-name>artifactHandlerManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.repository.RepositoryManager</role>
          <field-name>repositoryManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>copy-dependencies</goal>
      <description>Goal that copies the project dependencies from the repository to a defined location.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-sources</phase>
      <implementation>org.apache.maven.plugins.dependency.fromDependencies.CopyDependenciesMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>1.0</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>addParentPoms</name>
          <type>boolean</type>
          <since>2.8</since>
          <required>false</required>
          <editable>true</editable>
          <description>Add parent poms to the list of copied dependencies (both current project pom parents and dependencies parents).</description>
        </parameter>
        <parameter>
          <name>classifier</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify classifier to look for. Example: sources</description>
        </parameter>
        <parameter>
          <name>copyPom</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Also copy the pom of each artifact.</description>
        </parameter>
        <parameter>
          <name>excludeArtifactIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of Artifact names to exclude.</description>
        </parameter>
        <parameter>
          <name>excludeClassifiers</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Classifiers to exclude. Empty String indicates don&apos;t exclude anything (default).</description>
        </parameter>
        <parameter>
          <name>excludeGroupIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of GroupId Names to exclude.</description>
        </parameter>
        <parameter>
          <name>excludeScope</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Scope to exclude. An Empty string indicates no scopes (default).</description>
        </parameter>
        <parameter>
          <name>excludeTransitive</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If we should exclude transitive dependencies</description>
        </parameter>
        <parameter>
          <name>excludeTypes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Types to exclude. Empty String indicates don&apos;t exclude anything (default).</description>
        </parameter>
        <parameter>
          <name>failOnMissingClassifierArtifact</name>
          <type>boolean</type>
          <since>2.0-alpha-2</since>
          <required>false</required>
          <editable>true</editable>
          <description>This only applies if the classifier parameter is used.</description>
        </parameter>
        <parameter>
          <name>ignorePermissions</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;i&gt;not used in this goal&lt;/i&gt;</description>
        </parameter>
        <parameter>
          <name>includeArtifactIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of Artifact names to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeClassifiers</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Classifiers to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeGroupIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of GroupIds to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeScope</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Scope to include. An Empty string indicates all scopes (default). The scopes being interpreted are the scopes as
Maven sees them, not as specified in the pom. In summary:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;runtime&lt;/code&gt; scope gives runtime and compile dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compile&lt;/code&gt; scope gives compile, provided, and system dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test&lt;/code&gt; (default) scope gives all dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;provided&lt;/code&gt; scope just gives provided dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system&lt;/code&gt; scope just gives system dependencies.&lt;/li&gt;
&lt;/ul&gt;</description>
        </parameter>
        <parameter>
          <name>includeTypes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Types to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>markersDirectory</name>
          <type>java.io.File</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Directory to store flag files</description>
        </parameter>
        <parameter>
          <name>outputAbsoluteArtifactFilename</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output absolute filename for resolved artifacts</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output location.</description>
        </parameter>
        <parameter>
          <name>overWriteIfNewer</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite artifacts that don&apos;t exist or are older than the source.</description>
        </parameter>
        <parameter>
          <name>overWriteReleases</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite release artifacts</description>
        </parameter>
        <parameter>
          <name>overWriteSnapshots</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite snapshot artifacts</description>
        </parameter>
        <parameter>
          <name>prependGroupId</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Prepend the groupId during copy.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>POM</description>
        </parameter>
        <parameter>
          <name>reactorProjects</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>Contains the full list of projects in the reactor.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>Remote repositories which will be searched for artifacts.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven session</description>
        </parameter>
        <parameter>
          <name>silent</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If the plugin should be silent.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>stripClassifier</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Strip artifact classifier during copy</description>
        </parameter>
        <parameter>
          <name>stripVersion</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Strip artifact version during copy</description>
        </parameter>
        <parameter>
          <name>type</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify type to look for when constructing artifact based on classifier. Example: java-source,jar,war</description>
        </parameter>
        <parameter>
          <name>useBaseVersion</name>
          <type>boolean</type>
          <since>2.6</since>
          <required>false</required>
          <editable>true</editable>
          <description>Either append the artifact&apos;s baseVersion or uniqueVersion to the filename. Will only be used if
{@link #isStripVersion()} is {@code false}.</description>
        </parameter>
        <parameter>
          <name>useJvmChmod</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;i&gt;not used in this goal&lt;/i&gt;</description>
        </parameter>
        <parameter>
          <name>useRepositoryLayout</name>
          <type>boolean</type>
          <since>2.0-alpha-2</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Place each artifact in the same directory layout as a default repository.
&lt;/p&gt;
&lt;p&gt;
example:
&lt;/p&gt;

&lt;pre&gt;
  /outputDirectory/junit/junit/3.8.1/junit-3.8.1.jar
&lt;/pre&gt;</description>
        </parameter>
        <parameter>
          <name>useSubDirectoryPerArtifact</name>
          <type>boolean</type>
          <since>2.0-alpha-1</since>
          <required>false</required>
          <editable>true</editable>
          <description>Place each file in a separate subdirectory. (example &lt;code&gt;/outputDirectory/junit-3.8.1-jar&lt;/code&gt;)</description>
        </parameter>
        <parameter>
          <name>useSubDirectoryPerScope</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Place each type of file in a separate subdirectory. (example /outputDirectory/runtime /outputDirectory/provided
etc)</description>
        </parameter>
        <parameter>
          <name>useSubDirectoryPerType</name>
          <type>boolean</type>
          <since>2.0-alpha-1</since>
          <required>false</required>
          <editable>true</editable>
          <description>Place each type of file in a separate subdirectory. (example /outputDirectory/jars /outputDirectory/wars etc)</description>
        </parameter>
      </parameters>
      <configuration>
        <addParentPoms implementation="boolean" default-value="false">${mdep.addParentPoms}</addParentPoms>
        <classifier implementation="java.lang.String" default-value="">${classifier}</classifier>
        <copyPom implementation="boolean" default-value="false">${mdep.copyPom}</copyPom>
        <excludeArtifactIds implementation="java.lang.String" default-value="">${excludeArtifactIds}</excludeArtifactIds>
        <excludeClassifiers implementation="java.lang.String" default-value="">${excludeClassifiers}</excludeClassifiers>
        <excludeGroupIds implementation="java.lang.String" default-value="">${excludeGroupIds}</excludeGroupIds>
        <excludeScope implementation="java.lang.String" default-value="">${excludeScope}</excludeScope>
        <excludeTransitive implementation="boolean" default-value="false">${excludeTransitive}</excludeTransitive>
        <excludeTypes implementation="java.lang.String" default-value="">${excludeTypes}</excludeTypes>
        <failOnMissingClassifierArtifact implementation="boolean" default-value="false">${mdep.failOnMissingClassifierArtifact}</failOnMissingClassifierArtifact>
        <includeArtifactIds implementation="java.lang.String" default-value="">${includeArtifactIds}</includeArtifactIds>
        <includeClassifiers implementation="java.lang.String" default-value="">${includeClassifiers}</includeClassifiers>
        <includeGroupIds implementation="java.lang.String" default-value="">${includeGroupIds}</includeGroupIds>
        <includeScope implementation="java.lang.String" default-value="">${includeScope}</includeScope>
        <includeTypes implementation="java.lang.String" default-value="">${includeTypes}</includeTypes>
        <markersDirectory implementation="java.io.File" default-value="${project.build.directory}/dependency-maven-plugin-markers">${markersDirectory}</markersDirectory>
        <outputAbsoluteArtifactFilename implementation="boolean" default-value="false">${outputAbsoluteArtifactFilename}</outputAbsoluteArtifactFilename>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}/dependency">${outputDirectory}</outputDirectory>
        <overWriteIfNewer implementation="boolean" default-value="true">${overWriteIfNewer}</overWriteIfNewer>
        <overWriteReleases implementation="boolean" default-value="false">${overWriteReleases}</overWriteReleases>
        <overWriteSnapshots implementation="boolean" default-value="false">${overWriteSnapshots}</overWriteSnapshots>
        <prependGroupId implementation="boolean" default-value="false">${mdep.prependGroupId}</prependGroupId>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <reactorProjects implementation="java.util.List" default-value="${reactorProjects}"/>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <silent implementation="boolean" default-value="false">${silent}</silent>
        <skip implementation="boolean" default-value="false">${mdep.skip}</skip>
        <stripClassifier implementation="boolean" default-value="false">${mdep.stripClassifier}</stripClassifier>
        <stripVersion implementation="boolean" default-value="false">${mdep.stripVersion}</stripVersion>
        <type implementation="java.lang.String" default-value="">${type}</type>
        <useBaseVersion implementation="boolean" default-value="true">${mdep.useBaseVersion}</useBaseVersion>
        <useRepositoryLayout implementation="boolean" default-value="false">${mdep.useRepositoryLayout}</useRepositoryLayout>
        <useSubDirectoryPerArtifact implementation="boolean" default-value="false">${mdep.useSubDirectoryPerArtifact}</useSubDirectoryPerArtifact>
        <useSubDirectoryPerScope implementation="boolean" default-value="false">${mdep.useSubDirectoryPerScope}</useSubDirectoryPerScope>
        <useSubDirectoryPerType implementation="boolean" default-value="false">${mdep.useSubDirectoryPerType}</useSubDirectoryPerType>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.archiver.manager.ArchiverManager</role>
          <field-name>archiverManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.handler.manager.ArtifactHandlerManager</role>
          <field-name>artifactHandlerManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.dependencies.resolve.DependencyResolver</role>
          <field-name>dependencyResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.install.ArtifactInstaller</role>
          <field-name>installer</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.ProjectBuilder</role>
          <field-name>projectBuilder</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout</role>
          <field-name>repositoryLayouts</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.repository.RepositoryManager</role>
          <field-name>repositoryManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>display-ancestors</goal>
      <description>Displays all ancestor POMs of the project. This may be useful in a continuous integration system where you want to
know all parent poms of the project.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>validate</phase>
      <implementation>org.apache.maven.plugins.dependency.DisplayAncestorsMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.9</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>false</required>
          <editable>false</editable>
          <description>POM</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>get</goal>
      <description>Resolves a single artifact, eventually transitively, from the specified remote repositories. Caveat: will always
check the central repository defined in the super pom. You could use a mirror entry in your &lt;code&gt;settings.xml&lt;/code&gt;</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.maven.plugins.dependency.GetMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>artifact</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>A string of the form groupId:artifactId:version[:packaging[:classifier]].</description>
        </parameter>
        <parameter>
          <name>artifactId</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The artifactId of the artifact to download. Ignored if {@link #artifact} is used.</description>
        </parameter>
        <parameter>
          <name>classifier</name>
          <type>java.lang.String</type>
          <since>2.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>The classifier of the artifact to download. Ignored if {@link #artifact} is used.</description>
        </parameter>
        <parameter>
          <name>groupId</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The groupId of the artifact to download. Ignored if {@link #artifact} is used.</description>
        </parameter>
        <parameter>
          <name>packaging</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The packaging of the artifact to download. Ignored if {@link #artifact} is used.</description>
        </parameter>
        <parameter>
          <name>pomRemoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Repositories in the format id::[layout]::url or just url, separated by comma. ie.
central::default::https://repo.maven.apache.org/maven2,myrepo::::https://repo.acme.com,https://repo.acme2.com</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>transitive</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Download transitively, retrieving the specified artifact and all of its dependencies.</description>
        </parameter>
        <parameter>
          <name>version</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The version of the artifact to download. Ignored if {@link #artifact} is used.</description>
        </parameter>
      </parameters>
      <configuration>
        <artifact implementation="java.lang.String">${artifact}</artifact>
        <artifactId implementation="java.lang.String">${artifactId}</artifactId>
        <classifier implementation="java.lang.String">${classifier}</classifier>
        <groupId implementation="java.lang.String">${groupId}</groupId>
        <packaging implementation="java.lang.String" default-value="jar">${packaging}</packaging>
        <pomRemoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <remoteRepositories implementation="java.lang.String">${remoteRepositories}</remoteRepositories>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <skip implementation="boolean" default-value="false">${mdep.skip}</skip>
        <transitive implementation="boolean" default-value="true">${transitive}</transitive>
        <version implementation="java.lang.String">${version}</version>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.handler.manager.ArtifactHandlerManager</role>
          <field-name>artifactHandlerManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.dependencies.resolve.DependencyResolver</role>
          <field-name>dependencyResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout</role>
          <field-name>repositoryLayouts</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.repository.RepositorySystem</role>
          <field-name>repositorySystem</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>go-offline</goal>
      <description>Goal that resolves all project dependencies, including plugins and reports and their dependencies.

&lt;a href=&quot;mailto:brianf@apache.org&quot;&gt;Brian Fox&lt;/a&gt;</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.maven.plugins.dependency.resolvers.GoOfflineMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.0</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>appendOutput</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to append outputs into the output file or overwrite it.</description>
        </parameter>
        <parameter>
          <name>classifier</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify classifier to look for. Example: sources</description>
        </parameter>
        <parameter>
          <name>excludeArtifactIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of Artifact names to exclude.</description>
        </parameter>
        <parameter>
          <name>excludeClassifiers</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Classifiers to exclude. Empty String indicates don&apos;t exclude anything (default).</description>
        </parameter>
        <parameter>
          <name>excludeGroupIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of GroupId Names to exclude.</description>
        </parameter>
        <parameter>
          <name>excludeReactor</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Don&apos;t resolve plugins that are in the current reactor.</description>
        </parameter>
        <parameter>
          <name>excludeScope</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Scope to exclude. An Empty string indicates no scopes (default).</description>
        </parameter>
        <parameter>
          <name>excludeTransitive</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If we should exclude transitive dependencies</description>
        </parameter>
        <parameter>
          <name>excludeTypes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Types to exclude. Empty String indicates don&apos;t exclude anything (default).</description>
        </parameter>
        <parameter>
          <name>ignorePermissions</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;i&gt;not used in this goal&lt;/i&gt;</description>
        </parameter>
        <parameter>
          <name>includeArtifactIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of Artifact names to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeClassifiers</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Classifiers to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeGroupIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of GroupIds to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeScope</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Scope to include. An Empty string indicates all scopes (default). The scopes being interpreted are the scopes as
Maven sees them, not as specified in the pom. In summary:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;runtime&lt;/code&gt; scope gives runtime and compile dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compile&lt;/code&gt; scope gives compile, provided, and system dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test&lt;/code&gt; (default) scope gives all dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;provided&lt;/code&gt; scope just gives provided dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system&lt;/code&gt; scope just gives system dependencies.&lt;/li&gt;
&lt;/ul&gt;</description>
        </parameter>
        <parameter>
          <name>includeTypes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Types to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>markersDirectory</name>
          <type>java.io.File</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Directory to store flag files</description>
        </parameter>
        <parameter>
          <name>outputAbsoluteArtifactFilename</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output absolute filename for resolved artifacts</description>
        </parameter>
        <parameter>
          <name>outputFile</name>
          <type>java.io.File</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If specified, this parameter will cause the dependencies to be written to the path specified, instead of writing
to the console.</description>
        </parameter>
        <parameter>
          <name>overWriteIfNewer</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite artifacts that don&apos;t exist or are older than the source.</description>
        </parameter>
        <parameter>
          <name>overWriteReleases</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite release artifacts</description>
        </parameter>
        <parameter>
          <name>overWriteSnapshots</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite snapshot artifacts</description>
        </parameter>
        <parameter>
          <name>prependGroupId</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Prepend the groupId during copy.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>POM</description>
        </parameter>
        <parameter>
          <name>reactorProjects</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>Contains the full list of projects in the reactor.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>Remote repositories which will be searched for artifacts.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven session</description>
        </parameter>
        <parameter>
          <name>silent</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If the plugin should be silent.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>type</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify type to look for when constructing artifact based on classifier. Example: java-source,jar,war</description>
        </parameter>
        <parameter>
          <name>useJvmChmod</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;i&gt;not used in this goal&lt;/i&gt;</description>
        </parameter>
      </parameters>
      <configuration>
        <appendOutput implementation="boolean" default-value="false">${appendOutput}</appendOutput>
        <classifier implementation="java.lang.String" default-value="">${classifier}</classifier>
        <excludeArtifactIds implementation="java.lang.String" default-value="">${excludeArtifactIds}</excludeArtifactIds>
        <excludeClassifiers implementation="java.lang.String" default-value="">${excludeClassifiers}</excludeClassifiers>
        <excludeGroupIds implementation="java.lang.String" default-value="">${excludeGroupIds}</excludeGroupIds>
        <excludeReactor implementation="boolean" default-value="true">${excludeReactor}</excludeReactor>
        <excludeScope implementation="java.lang.String" default-value="">${excludeScope}</excludeScope>
        <excludeTransitive implementation="boolean" default-value="false">${excludeTransitive}</excludeTransitive>
        <excludeTypes implementation="java.lang.String" default-value="">${excludeTypes}</excludeTypes>
        <includeArtifactIds implementation="java.lang.String" default-value="">${includeArtifactIds}</includeArtifactIds>
        <includeClassifiers implementation="java.lang.String" default-value="">${includeClassifiers}</includeClassifiers>
        <includeGroupIds implementation="java.lang.String" default-value="">${includeGroupIds}</includeGroupIds>
        <includeScope implementation="java.lang.String" default-value="">${includeScope}</includeScope>
        <includeTypes implementation="java.lang.String" default-value="">${includeTypes}</includeTypes>
        <markersDirectory implementation="java.io.File" default-value="${project.build.directory}/dependency-maven-plugin-markers">${markersDirectory}</markersDirectory>
        <outputAbsoluteArtifactFilename implementation="boolean" default-value="false">${outputAbsoluteArtifactFilename}</outputAbsoluteArtifactFilename>
        <outputFile implementation="java.io.File">${outputFile}</outputFile>
        <overWriteIfNewer implementation="boolean" default-value="true">${overWriteIfNewer}</overWriteIfNewer>
        <overWriteReleases implementation="boolean" default-value="false">${overWriteReleases}</overWriteReleases>
        <overWriteSnapshots implementation="boolean" default-value="false">${overWriteSnapshots}</overWriteSnapshots>
        <prependGroupId implementation="boolean" default-value="false">${mdep.prependGroupId}</prependGroupId>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <reactorProjects implementation="java.util.List" default-value="${reactorProjects}"/>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <silent implementation="boolean" default-value="false">${silent}</silent>
        <skip implementation="boolean" default-value="false">${mdep.skip}</skip>
        <type implementation="java.lang.String" default-value="">${type}</type>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.archiver.manager.ArchiverManager</role>
          <field-name>archiverManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.handler.manager.ArtifactHandlerManager</role>
          <field-name>artifactHandlerManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.dependencies.resolve.DependencyResolver</role>
          <field-name>dependencyResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.ProjectBuilder</role>
          <field-name>projectBuilder</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.repository.RepositoryManager</role>
          <field-name>repositoryManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>help</goal>
      <description>Display help information on maven-dependency-plugin.&lt;br&gt;
Call &lt;code&gt;mvn dependency:help -Ddetail=true -Dgoal=&amp;lt;goal-name&amp;gt;&lt;/code&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.maven.plugins.dependency.resolvers.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;code&gt;true&lt;/code&gt;, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>list</goal>
      <description>Displays the list of dependencies for this project.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.maven.plugins.dependency.resolvers.ListMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.0-alpha-5</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>appendOutput</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to append outputs into the output file or overwrite it.</description>
        </parameter>
        <parameter>
          <name>classifier</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify classifier to look for. Example: sources</description>
        </parameter>
        <parameter>
          <name>excludeArtifactIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of Artifact names to exclude.</description>
        </parameter>
        <parameter>
          <name>excludeClassifiers</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Classifiers to exclude. Empty String indicates don&apos;t exclude anything (default).</description>
        </parameter>
        <parameter>
          <name>excludeGroupIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of GroupId Names to exclude.</description>
        </parameter>
        <parameter>
          <name>excludeReactor</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Don&apos;t resolve plugins that are in the current reactor.</description>
        </parameter>
        <parameter>
          <name>excludeScope</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Scope to exclude. An Empty string indicates no scopes (default).</description>
        </parameter>
        <parameter>
          <name>excludeTransitive</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If we should exclude transitive dependencies</description>
        </parameter>
        <parameter>
          <name>excludeTypes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Types to exclude. Empty String indicates don&apos;t exclude anything (default).</description>
        </parameter>
        <parameter>
          <name>ignorePermissions</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;i&gt;not used in this goal&lt;/i&gt;</description>
        </parameter>
        <parameter>
          <name>includeArtifactIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of Artifact names to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeClassifiers</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Classifiers to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeGroupIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of GroupIds to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeParents</name>
          <type>boolean</type>
          <since>2.8</since>
          <required>false</required>
          <editable>true</editable>
          <description>Include parent poms in the dependency resolution list.</description>
        </parameter>
        <parameter>
          <name>includeScope</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Scope to include. An Empty string indicates all scopes (default). The scopes being interpreted are the scopes as
Maven sees them, not as specified in the pom. In summary:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;runtime&lt;/code&gt; scope gives runtime and compile dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compile&lt;/code&gt; scope gives compile, provided, and system dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test&lt;/code&gt; (default) scope gives all dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;provided&lt;/code&gt; scope just gives provided dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system&lt;/code&gt; scope just gives system dependencies.&lt;/li&gt;
&lt;/ul&gt;</description>
        </parameter>
        <parameter>
          <name>includeTypes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Types to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>markersDirectory</name>
          <type>java.io.File</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Directory to store flag files</description>
        </parameter>
        <parameter>
          <name>outputAbsoluteArtifactFilename</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output absolute filename for resolved artifacts</description>
        </parameter>
        <parameter>
          <name>outputFile</name>
          <type>java.io.File</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If specified, this parameter will cause the dependencies to be written to the path specified, instead of writing
to the console.</description>
        </parameter>
        <parameter>
          <name>outputScope</name>
          <type>boolean</type>
          <since>2.0-alpha-2</since>
          <required>false</required>
          <editable>true</editable>
          <description>If we should display the scope when resolving</description>
        </parameter>
        <parameter>
          <name>overWriteIfNewer</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite artifacts that don&apos;t exist or are older than the source.</description>
        </parameter>
        <parameter>
          <name>overWriteReleases</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite release artifacts</description>
        </parameter>
        <parameter>
          <name>overWriteSnapshots</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite snapshot artifacts</description>
        </parameter>
        <parameter>
          <name>prependGroupId</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Prepend the groupId during copy.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>POM</description>
        </parameter>
        <parameter>
          <name>reactorProjects</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>Contains the full list of projects in the reactor.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>Remote repositories which will be searched for artifacts.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven session</description>
        </parameter>
        <parameter>
          <name>silent</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If the plugin should be silent.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>sort</name>
          <type>boolean</type>
          <since>2.8</since>
          <required>false</required>
          <editable>true</editable>
          <description>Sort the output list of resolved artifacts alphabetically. The default ordering matches the classpath order.</description>
        </parameter>
        <parameter>
          <name>type</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify type to look for when constructing artifact based on classifier. Example: java-source,jar,war</description>
        </parameter>
        <parameter>
          <name>useJvmChmod</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;i&gt;not used in this goal&lt;/i&gt;</description>
        </parameter>
      </parameters>
      <configuration>
        <appendOutput implementation="boolean" default-value="false">${appendOutput}</appendOutput>
        <classifier implementation="java.lang.String" default-value="">${classifier}</classifier>
        <excludeArtifactIds implementation="java.lang.String" default-value="">${excludeArtifactIds}</excludeArtifactIds>
        <excludeClassifiers implementation="java.lang.String" default-value="">${excludeClassifiers}</excludeClassifiers>
        <excludeGroupIds implementation="java.lang.String" default-value="">${excludeGroupIds}</excludeGroupIds>
        <excludeReactor implementation="boolean" default-value="true">${excludeReactor}</excludeReactor>
        <excludeScope implementation="java.lang.String" default-value="">${excludeScope}</excludeScope>
        <excludeTransitive implementation="boolean" default-value="false">${excludeTransitive}</excludeTransitive>
        <excludeTypes implementation="java.lang.String" default-value="">${excludeTypes}</excludeTypes>
        <includeArtifactIds implementation="java.lang.String" default-value="">${includeArtifactIds}</includeArtifactIds>
        <includeClassifiers implementation="java.lang.String" default-value="">${includeClassifiers}</includeClassifiers>
        <includeGroupIds implementation="java.lang.String" default-value="">${includeGroupIds}</includeGroupIds>
        <includeParents implementation="boolean" default-value="false">${includeParents}</includeParents>
        <includeScope implementation="java.lang.String" default-value="">${includeScope}</includeScope>
        <includeTypes implementation="java.lang.String" default-value="">${includeTypes}</includeTypes>
        <markersDirectory implementation="java.io.File" default-value="${project.build.directory}/dependency-maven-plugin-markers">${markersDirectory}</markersDirectory>
        <outputAbsoluteArtifactFilename implementation="boolean" default-value="false">${outputAbsoluteArtifactFilename}</outputAbsoluteArtifactFilename>
        <outputFile implementation="java.io.File">${outputFile}</outputFile>
        <outputScope implementation="boolean" default-value="true">${mdep.outputScope}</outputScope>
        <overWriteIfNewer implementation="boolean" default-value="true">${overWriteIfNewer}</overWriteIfNewer>
        <overWriteReleases implementation="boolean" default-value="false">${overWriteReleases}</overWriteReleases>
        <overWriteSnapshots implementation="boolean" default-value="false">${overWriteSnapshots}</overWriteSnapshots>
        <prependGroupId implementation="boolean" default-value="false">${mdep.prependGroupId}</prependGroupId>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <reactorProjects implementation="java.util.List" default-value="${reactorProjects}"/>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <silent implementation="boolean" default-value="false">${silent}</silent>
        <skip implementation="boolean" default-value="false">${mdep.skip}</skip>
        <sort implementation="boolean" default-value="false">${sort}</sort>
        <type implementation="java.lang.String" default-value="">${type}</type>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.archiver.manager.ArchiverManager</role>
          <field-name>archiverManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.handler.manager.ArtifactHandlerManager</role>
          <field-name>artifactHandlerManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.dependencies.resolve.DependencyResolver</role>
          <field-name>dependencyResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.ProjectBuilder</role>
          <field-name>projectBuilder</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.repository.RepositoryManager</role>
          <field-name>repositoryManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>list-repositories</goal>
      <description>Goal that resolves all project dependencies and then lists the repositories used by the build and by the transitive
dependencies</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.maven.plugins.dependency.resolvers.ListRepositoriesMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.2</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>ignorePermissions</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>ignore to set file permissions when unpacking a dependency</description>
        </parameter>
        <parameter>
          <name>outputAbsoluteArtifactFilename</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output absolute filename for resolved artifacts</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>POM</description>
        </parameter>
        <parameter>
          <name>reactorProjects</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>Contains the full list of projects in the reactor.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>Remote repositories which will be searched for artifacts.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven session</description>
        </parameter>
        <parameter>
          <name>silent</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If the plugin should be silent.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>useJvmChmod</name>
          <type>boolean</type>
          <since>2.5.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
will use the jvm chmod, this is available for user and all level group level will be ignored
&lt;/p&gt;
&lt;b&gt;since 2.6 is on by default&lt;/b&gt;</description>
        </parameter>
      </parameters>
      <configuration>
        <ignorePermissions implementation="boolean" default-value="false">${dependency.ignorePermissions}</ignorePermissions>
        <outputAbsoluteArtifactFilename implementation="boolean" default-value="false">${outputAbsoluteArtifactFilename}</outputAbsoluteArtifactFilename>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <reactorProjects implementation="java.util.List" default-value="${reactorProjects}"/>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <silent implementation="boolean" default-value="false">${silent}</silent>
        <skip implementation="boolean" default-value="false">${mdep.skip}</skip>
        <useJvmChmod implementation="boolean" default-value="true">${dependency.useJvmChmod}</useJvmChmod>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.archiver.manager.ArchiverManager</role>
          <field-name>archiverManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.dependencies.collect.DependencyCollector</role>
          <field-name>dependencyCollector</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>properties</goal>
      <description>Goal that sets a property pointing to the artifact file for each project dependency. For each dependency (direct and
transitive) a project property will be set which follows the &lt;code&gt;groupId:artifactId:type:[classifier]&lt;/code&gt; form
and contains the path to the resolved artifact.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>initialize</phase>
      <implementation>org.apache.maven.plugins.dependency.PropertiesMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.2</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current Maven project</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <skip implementation="boolean" default-value="false">${mdep.skip}</skip>
      </configuration>
    </mojo>
    <mojo>
      <goal>purge-local-repository</goal>
      <description>When run on a project, remove the project dependencies from the local repository, and optionally re-resolve them.
Outside of a project, remove the manually given dependencies.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.maven.plugins.dependency.PurgeLocalRepositoryMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.0</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>actTransitively</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether this mojo should act on all transitive dependencies. Default value is true.</description>
        </parameter>
        <parameter>
          <name>exclude</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma-separated list of groupId:artifactId entries, which should be used to exclude artifacts from
deletion/refresh. This is a command-line alternative to the &lt;code&gt;excludes&lt;/code&gt; parameter, since List
parameters are not currently compatible with CLI specification.</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>The list of dependencies in the form of groupId:artifactId which should NOT be deleted/refreshed.</description>
        </parameter>
        <parameter>
          <name>include</name>
          <type>java.lang.String</type>
          <since>2.6</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma-separated list of groupId:artifactId entries, which should be used to include artifacts for
deletion/refresh. This is a command-line alternative to the &lt;code&gt;includes&lt;/code&gt; parameter, since List
parameters are not currently compatible with CLI specification.</description>
        </parameter>
        <parameter>
          <name>includes</name>
          <type>java.util.List</type>
          <since>2.6</since>
          <required>false</required>
          <editable>true</editable>
          <description>The list of dependencies in the form of groupId:artifactId which should BE deleted/refreshed.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local repository, from which to delete artifacts.</description>
        </parameter>
        <parameter>
          <name>manualInclude</name>
          <type>java.lang.String</type>
          <since>2.6</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma-separated list of groupId:artifactId entries, which should be used to manually include artifacts for
deletion. This is a command-line alternative to the &lt;code&gt;manualIncludes&lt;/code&gt; parameter, since List parameters
are not currently compatible with CLI specification.</description>
        </parameter>
        <parameter>
          <name>manualIncludes</name>
          <type>java.util.List</type>
          <since>2.6</since>
          <required>false</required>
          <editable>true</editable>
          <description>The list of dependencies in the form of groupId:artifactId which should BE deleted/purged from the local
repository. Note that using this parameter will deactivate the normal process for purging the current project
dependency tree. If this parameter is used, only the included artifacts will be purged. The manualIncludes
parameter should not be used in combination with the includes/excludes parameters.</description>
        </parameter>
        <parameter>
          <name>mojoExecution</name>
          <type>org.apache.maven.plugin.MojoExecution</type>
          <required>true</required>
          <editable>false</editable>
          <description>This mojo execution, used to determine if it was launched from the lifecycle or the command-line.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current Maven project.</description>
        </parameter>
        <parameter>
          <name>reResolve</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to re-resolve the artifacts once they have been deleted from the local repository. If you are running
this mojo from the command-line, you may want to disable this. By default, artifacts will be re-resolved.</description>
        </parameter>
        <parameter>
          <name>reactorProjects</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven projects in the reactor.</description>
        </parameter>
        <parameter>
          <name>resolutionFuzziness</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Determines how liberally the plugin will delete an artifact from the local repository. Values are: &lt;br/&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;file&lt;/b&gt; - Eliminate only the artifact&apos;s file.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;version&lt;/b&gt; &lt;i&gt;(default)&lt;/i&gt; - Eliminate all files associated with the version of the artifact.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;artifactId&lt;/b&gt; - Eliminate all files associated with the artifact&apos;s artifactId.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;groupId&lt;/b&gt; - Eliminate all files associated with the artifact&apos;s groupId.&lt;/li&gt;
&lt;/ul&gt;</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>snapshotsOnly</name>
          <type>boolean</type>
          <since>2.4</since>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to purge only snapshot artifacts.</description>
        </parameter>
        <parameter>
          <name>verbose</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether this plugin should output verbose messages. Default is false.</description>
        </parameter>
      </parameters>
      <configuration>
        <actTransitively implementation="boolean" default-value="true">${actTransitively}</actTransitively>
        <exclude implementation="java.lang.String">${exclude}</exclude>
        <include implementation="java.lang.String">${include}</include>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
        <manualInclude implementation="java.lang.String">${manualInclude}</manualInclude>
        <mojoExecution implementation="org.apache.maven.plugin.MojoExecution" default-value="${mojo}"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <reResolve implementation="boolean" default-value="true">${reResolve}</reResolve>
        <reactorProjects implementation="java.util.List" default-value="${reactorProjects}"/>
        <resolutionFuzziness implementation="java.lang.String" default-value="version">${resolutionFuzziness}</resolutionFuzziness>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <skip implementation="boolean" default-value="false">${skip}</skip>
        <snapshotsOnly implementation="boolean" default-value="false">${snapshotsOnly}</snapshotsOnly>
        <verbose implementation="boolean" default-value="false">${verbose}</verbose>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.handler.manager.ArtifactHandlerManager</role>
          <field-name>artifactHandlerManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.dependencies.resolve.DependencyResolver</role>
          <field-name>dependencyResolver</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>resolve</goal>
      <description>Goal that resolves the project dependencies from the repository. When using this goal while running on Java 9 the
module names will be visible as well.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>generate-sources</phase>
      <implementation>org.apache.maven.plugins.dependency.resolvers.ResolveDependenciesMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.0</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>appendOutput</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to append outputs into the output file or overwrite it.</description>
        </parameter>
        <parameter>
          <name>classifier</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify classifier to look for. Example: sources</description>
        </parameter>
        <parameter>
          <name>excludeArtifactIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of Artifact names to exclude.</description>
        </parameter>
        <parameter>
          <name>excludeClassifiers</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Classifiers to exclude. Empty String indicates don&apos;t exclude anything (default).</description>
        </parameter>
        <parameter>
          <name>excludeGroupIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of GroupId Names to exclude.</description>
        </parameter>
        <parameter>
          <name>excludeReactor</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Don&apos;t resolve plugins that are in the current reactor.</description>
        </parameter>
        <parameter>
          <name>excludeScope</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Scope to exclude. An Empty string indicates no scopes (default).</description>
        </parameter>
        <parameter>
          <name>excludeTransitive</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If we should exclude transitive dependencies</description>
        </parameter>
        <parameter>
          <name>excludeTypes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Types to exclude. Empty String indicates don&apos;t exclude anything (default).</description>
        </parameter>
        <parameter>
          <name>ignorePermissions</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;i&gt;not used in this goal&lt;/i&gt;</description>
        </parameter>
        <parameter>
          <name>includeArtifactIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of Artifact names to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeClassifiers</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Classifiers to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeGroupIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of GroupIds to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeParents</name>
          <type>boolean</type>
          <since>2.8</since>
          <required>false</required>
          <editable>true</editable>
          <description>Include parent poms in the dependency resolution list.</description>
        </parameter>
        <parameter>
          <name>includeScope</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Scope to include. An Empty string indicates all scopes (default). The scopes being interpreted are the scopes as
Maven sees them, not as specified in the pom. In summary:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;runtime&lt;/code&gt; scope gives runtime and compile dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compile&lt;/code&gt; scope gives compile, provided, and system dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test&lt;/code&gt; (default) scope gives all dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;provided&lt;/code&gt; scope just gives provided dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system&lt;/code&gt; scope just gives system dependencies.&lt;/li&gt;
&lt;/ul&gt;</description>
        </parameter>
        <parameter>
          <name>includeTypes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Types to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>markersDirectory</name>
          <type>java.io.File</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Directory to store flag files</description>
        </parameter>
        <parameter>
          <name>outputAbsoluteArtifactFilename</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output absolute filename for resolved artifacts</description>
        </parameter>
        <parameter>
          <name>outputFile</name>
          <type>java.io.File</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If specified, this parameter will cause the dependencies to be written to the path specified, instead of writing
to the console.</description>
        </parameter>
        <parameter>
          <name>outputScope</name>
          <type>boolean</type>
          <since>2.0-alpha-2</since>
          <required>false</required>
          <editable>true</editable>
          <description>If we should display the scope when resolving</description>
        </parameter>
        <parameter>
          <name>overWriteIfNewer</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite artifacts that don&apos;t exist or are older than the source.</description>
        </parameter>
        <parameter>
          <name>overWriteReleases</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite release artifacts</description>
        </parameter>
        <parameter>
          <name>overWriteSnapshots</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite snapshot artifacts</description>
        </parameter>
        <parameter>
          <name>prependGroupId</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Prepend the groupId during copy.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>POM</description>
        </parameter>
        <parameter>
          <name>reactorProjects</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>Contains the full list of projects in the reactor.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>Remote repositories which will be searched for artifacts.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven session</description>
        </parameter>
        <parameter>
          <name>silent</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If the plugin should be silent.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>sort</name>
          <type>boolean</type>
          <since>2.8</since>
          <required>false</required>
          <editable>true</editable>
          <description>Sort the output list of resolved artifacts alphabetically. The default ordering matches the classpath order.</description>
        </parameter>
        <parameter>
          <name>type</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify type to look for when constructing artifact based on classifier. Example: java-source,jar,war</description>
        </parameter>
        <parameter>
          <name>useJvmChmod</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;i&gt;not used in this goal&lt;/i&gt;</description>
        </parameter>
      </parameters>
      <configuration>
        <appendOutput implementation="boolean" default-value="false">${appendOutput}</appendOutput>
        <classifier implementation="java.lang.String" default-value="">${classifier}</classifier>
        <excludeArtifactIds implementation="java.lang.String" default-value="">${excludeArtifactIds}</excludeArtifactIds>
        <excludeClassifiers implementation="java.lang.String" default-value="">${excludeClassifiers}</excludeClassifiers>
        <excludeGroupIds implementation="java.lang.String" default-value="">${excludeGroupIds}</excludeGroupIds>
        <excludeReactor implementation="boolean" default-value="true">${excludeReactor}</excludeReactor>
        <excludeScope implementation="java.lang.String" default-value="">${excludeScope}</excludeScope>
        <excludeTransitive implementation="boolean" default-value="false">${excludeTransitive}</excludeTransitive>
        <excludeTypes implementation="java.lang.String" default-value="">${excludeTypes}</excludeTypes>
        <includeArtifactIds implementation="java.lang.String" default-value="">${includeArtifactIds}</includeArtifactIds>
        <includeClassifiers implementation="java.lang.String" default-value="">${includeClassifiers}</includeClassifiers>
        <includeGroupIds implementation="java.lang.String" default-value="">${includeGroupIds}</includeGroupIds>
        <includeParents implementation="boolean" default-value="false">${includeParents}</includeParents>
        <includeScope implementation="java.lang.String" default-value="">${includeScope}</includeScope>
        <includeTypes implementation="java.lang.String" default-value="">${includeTypes}</includeTypes>
        <markersDirectory implementation="java.io.File" default-value="${project.build.directory}/dependency-maven-plugin-markers">${markersDirectory}</markersDirectory>
        <outputAbsoluteArtifactFilename implementation="boolean" default-value="false">${outputAbsoluteArtifactFilename}</outputAbsoluteArtifactFilename>
        <outputFile implementation="java.io.File">${outputFile}</outputFile>
        <outputScope implementation="boolean" default-value="true">${mdep.outputScope}</outputScope>
        <overWriteIfNewer implementation="boolean" default-value="true">${overWriteIfNewer}</overWriteIfNewer>
        <overWriteReleases implementation="boolean" default-value="false">${overWriteReleases}</overWriteReleases>
        <overWriteSnapshots implementation="boolean" default-value="false">${overWriteSnapshots}</overWriteSnapshots>
        <prependGroupId implementation="boolean" default-value="false">${mdep.prependGroupId}</prependGroupId>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <reactorProjects implementation="java.util.List" default-value="${reactorProjects}"/>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <silent implementation="boolean" default-value="false">${silent}</silent>
        <skip implementation="boolean" default-value="false">${mdep.skip}</skip>
        <sort implementation="boolean" default-value="false">${sort}</sort>
        <type implementation="java.lang.String" default-value="">${type}</type>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.archiver.manager.ArchiverManager</role>
          <field-name>archiverManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.handler.manager.ArtifactHandlerManager</role>
          <field-name>artifactHandlerManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.dependencies.resolve.DependencyResolver</role>
          <field-name>dependencyResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.ProjectBuilder</role>
          <field-name>projectBuilder</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.repository.RepositoryManager</role>
          <field-name>repositoryManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>resolve-plugins</goal>
      <description>Goal that resolves all project plugins and reports and their dependencies.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>generate-sources</phase>
      <implementation>org.apache.maven.plugins.dependency.resolvers.ResolvePluginsMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.0</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>appendOutput</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to append outputs into the output file or overwrite it.</description>
        </parameter>
        <parameter>
          <name>classifier</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify classifier to look for. Example: sources</description>
        </parameter>
        <parameter>
          <name>excludeArtifactIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of Artifact names to exclude.</description>
        </parameter>
        <parameter>
          <name>excludeClassifiers</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Classifiers to exclude. Empty String indicates don&apos;t exclude anything (default).</description>
        </parameter>
        <parameter>
          <name>excludeGroupIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of GroupId Names to exclude.</description>
        </parameter>
        <parameter>
          <name>excludeReactor</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Don&apos;t resolve plugins that are in the current reactor.</description>
        </parameter>
        <parameter>
          <name>excludeScope</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Scope to exclude. An Empty string indicates no scopes (default).</description>
        </parameter>
        <parameter>
          <name>excludeTransitive</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If we should exclude transitive dependencies</description>
        </parameter>
        <parameter>
          <name>excludeTypes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Types to exclude. Empty String indicates don&apos;t exclude anything (default).</description>
        </parameter>
        <parameter>
          <name>ignorePermissions</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;i&gt;not used in this goal&lt;/i&gt;</description>
        </parameter>
        <parameter>
          <name>includeArtifactIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of Artifact names to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeClassifiers</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Classifiers to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeGroupIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of GroupIds to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeScope</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Scope to include. An Empty string indicates all scopes (default). The scopes being interpreted are the scopes as
Maven sees them, not as specified in the pom. In summary:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;runtime&lt;/code&gt; scope gives runtime and compile dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compile&lt;/code&gt; scope gives compile, provided, and system dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test&lt;/code&gt; (default) scope gives all dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;provided&lt;/code&gt; scope just gives provided dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system&lt;/code&gt; scope just gives system dependencies.&lt;/li&gt;
&lt;/ul&gt;</description>
        </parameter>
        <parameter>
          <name>includeTypes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Types to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>markersDirectory</name>
          <type>java.io.File</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Directory to store flag files</description>
        </parameter>
        <parameter>
          <name>outputAbsoluteArtifactFilename</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output absolute filename for resolved artifacts</description>
        </parameter>
        <parameter>
          <name>outputFile</name>
          <type>java.io.File</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If specified, this parameter will cause the dependencies to be written to the path specified, instead of writing
to the console.</description>
        </parameter>
        <parameter>
          <name>overWriteIfNewer</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite artifacts that don&apos;t exist or are older than the source.</description>
        </parameter>
        <parameter>
          <name>overWriteReleases</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite release artifacts</description>
        </parameter>
        <parameter>
          <name>overWriteSnapshots</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite snapshot artifacts</description>
        </parameter>
        <parameter>
          <name>prependGroupId</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Prepend the groupId during copy.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>POM</description>
        </parameter>
        <parameter>
          <name>reactorProjects</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>Contains the full list of projects in the reactor.</description>
        </parameter>
        <parameter>
          <name>remotePluginRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>Remote repositories which will be searched for plugins.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>Remote repositories which will be searched for artifacts.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven session</description>
        </parameter>
        <parameter>
          <name>silent</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If the plugin should be silent.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>type</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify type to look for when constructing artifact based on classifier. Example: java-source,jar,war</description>
        </parameter>
        <parameter>
          <name>useJvmChmod</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;i&gt;not used in this goal&lt;/i&gt;</description>
        </parameter>
      </parameters>
      <configuration>
        <appendOutput implementation="boolean" default-value="false">${appendOutput}</appendOutput>
        <classifier implementation="java.lang.String" default-value="">${classifier}</classifier>
        <excludeArtifactIds implementation="java.lang.String" default-value="">${excludeArtifactIds}</excludeArtifactIds>
        <excludeClassifiers implementation="java.lang.String" default-value="">${excludeClassifiers}</excludeClassifiers>
        <excludeGroupIds implementation="java.lang.String" default-value="">${excludeGroupIds}</excludeGroupIds>
        <excludeReactor implementation="boolean" default-value="true">${excludeReactor}</excludeReactor>
        <excludeScope implementation="java.lang.String" default-value="">${excludeScope}</excludeScope>
        <excludeTransitive implementation="boolean" default-value="false">${excludeTransitive}</excludeTransitive>
        <excludeTypes implementation="java.lang.String" default-value="">${excludeTypes}</excludeTypes>
        <includeArtifactIds implementation="java.lang.String" default-value="">${includeArtifactIds}</includeArtifactIds>
        <includeClassifiers implementation="java.lang.String" default-value="">${includeClassifiers}</includeClassifiers>
        <includeGroupIds implementation="java.lang.String" default-value="">${includeGroupIds}</includeGroupIds>
        <includeScope implementation="java.lang.String" default-value="">${includeScope}</includeScope>
        <includeTypes implementation="java.lang.String" default-value="">${includeTypes}</includeTypes>
        <markersDirectory implementation="java.io.File" default-value="${project.build.directory}/dependency-maven-plugin-markers">${markersDirectory}</markersDirectory>
        <outputAbsoluteArtifactFilename implementation="boolean" default-value="false">${outputAbsoluteArtifactFilename}</outputAbsoluteArtifactFilename>
        <outputFile implementation="java.io.File">${outputFile}</outputFile>
        <overWriteIfNewer implementation="boolean" default-value="true">${overWriteIfNewer}</overWriteIfNewer>
        <overWriteReleases implementation="boolean" default-value="false">${overWriteReleases}</overWriteReleases>
        <overWriteSnapshots implementation="boolean" default-value="false">${overWriteSnapshots}</overWriteSnapshots>
        <prependGroupId implementation="boolean" default-value="false">${mdep.prependGroupId}</prependGroupId>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <reactorProjects implementation="java.util.List" default-value="${reactorProjects}"/>
        <remotePluginRepositories implementation="java.util.List" default-value="${project.pluginArtifactRepositories}"/>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <silent implementation="boolean" default-value="false">${silent}</silent>
        <skip implementation="boolean" default-value="false">${mdep.skip}</skip>
        <type implementation="java.lang.String" default-value="">${type}</type>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.archiver.manager.ArchiverManager</role>
          <field-name>archiverManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.handler.manager.ArtifactHandlerManager</role>
          <field-name>artifactHandlerManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.dependencies.resolve.DependencyResolver</role>
          <field-name>dependencyResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.ProjectBuilder</role>
          <field-name>projectBuilder</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.repository.RepositoryManager</role>
          <field-name>repositoryManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>sources</goal>
      <description>Goal that resolves the project source dependencies from the repository.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>generate-sources</phase>
      <implementation>org.apache.maven.plugins.dependency.resolvers.ResolveDependencySourcesMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.0-alpha2</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>appendOutput</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to append outputs into the output file or overwrite it.</description>
        </parameter>
        <parameter>
          <name>classifier</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify classifier to look for. Example: sources</description>
        </parameter>
        <parameter>
          <name>excludeArtifactIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of Artifact names to exclude.</description>
        </parameter>
        <parameter>
          <name>excludeClassifiers</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Classifiers to exclude. Empty String indicates don&apos;t exclude anything (default).</description>
        </parameter>
        <parameter>
          <name>excludeGroupIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of GroupId Names to exclude.</description>
        </parameter>
        <parameter>
          <name>excludeReactor</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Don&apos;t resolve plugins that are in the current reactor.</description>
        </parameter>
        <parameter>
          <name>excludeScope</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Scope to exclude. An Empty string indicates no scopes (default).</description>
        </parameter>
        <parameter>
          <name>excludeTransitive</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If we should exclude transitive dependencies</description>
        </parameter>
        <parameter>
          <name>excludeTypes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Types to exclude. Empty String indicates don&apos;t exclude anything (default).</description>
        </parameter>
        <parameter>
          <name>ignorePermissions</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;i&gt;not used in this goal&lt;/i&gt;</description>
        </parameter>
        <parameter>
          <name>includeArtifactIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of Artifact names to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeClassifiers</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Classifiers to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeGroupIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of GroupIds to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeParents</name>
          <type>boolean</type>
          <since>2.8</since>
          <required>false</required>
          <editable>true</editable>
          <description>Include parent poms in the dependency resolution list.</description>
        </parameter>
        <parameter>
          <name>includeScope</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Scope to include. An Empty string indicates all scopes (default). The scopes being interpreted are the scopes as
Maven sees them, not as specified in the pom. In summary:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;runtime&lt;/code&gt; scope gives runtime and compile dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compile&lt;/code&gt; scope gives compile, provided, and system dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test&lt;/code&gt; (default) scope gives all dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;provided&lt;/code&gt; scope just gives provided dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system&lt;/code&gt; scope just gives system dependencies.&lt;/li&gt;
&lt;/ul&gt;</description>
        </parameter>
        <parameter>
          <name>includeTypes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Types to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>markersDirectory</name>
          <type>java.io.File</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Directory to store flag files</description>
        </parameter>
        <parameter>
          <name>outputAbsoluteArtifactFilename</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output absolute filename for resolved artifacts</description>
        </parameter>
        <parameter>
          <name>outputFile</name>
          <type>java.io.File</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If specified, this parameter will cause the dependencies to be written to the path specified, instead of writing
to the console.</description>
        </parameter>
        <parameter>
          <name>outputScope</name>
          <type>boolean</type>
          <since>2.0-alpha-2</since>
          <required>false</required>
          <editable>true</editable>
          <description>If we should display the scope when resolving</description>
        </parameter>
        <parameter>
          <name>overWriteIfNewer</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite artifacts that don&apos;t exist or are older than the source.</description>
        </parameter>
        <parameter>
          <name>overWriteReleases</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite release artifacts</description>
        </parameter>
        <parameter>
          <name>overWriteSnapshots</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite snapshot artifacts</description>
        </parameter>
        <parameter>
          <name>prependGroupId</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Prepend the groupId during copy.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>POM</description>
        </parameter>
        <parameter>
          <name>reactorProjects</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>Contains the full list of projects in the reactor.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>Remote repositories which will be searched for artifacts.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven session</description>
        </parameter>
        <parameter>
          <name>silent</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If the plugin should be silent.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>sort</name>
          <type>boolean</type>
          <since>2.8</since>
          <required>false</required>
          <editable>true</editable>
          <description>Sort the output list of resolved artifacts alphabetically. The default ordering matches the classpath order.</description>
        </parameter>
        <parameter>
          <name>type</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify type to look for when constructing artifact based on classifier. Example: java-source,jar,war</description>
        </parameter>
        <parameter>
          <name>useJvmChmod</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;i&gt;not used in this goal&lt;/i&gt;</description>
        </parameter>
      </parameters>
      <configuration>
        <appendOutput implementation="boolean" default-value="false">${appendOutput}</appendOutput>
        <classifier implementation="java.lang.String" default-value="">${classifier}</classifier>
        <excludeArtifactIds implementation="java.lang.String" default-value="">${excludeArtifactIds}</excludeArtifactIds>
        <excludeClassifiers implementation="java.lang.String" default-value="">${excludeClassifiers}</excludeClassifiers>
        <excludeGroupIds implementation="java.lang.String" default-value="">${excludeGroupIds}</excludeGroupIds>
        <excludeReactor implementation="boolean" default-value="true">${excludeReactor}</excludeReactor>
        <excludeScope implementation="java.lang.String" default-value="">${excludeScope}</excludeScope>
        <excludeTransitive implementation="boolean" default-value="false">${excludeTransitive}</excludeTransitive>
        <excludeTypes implementation="java.lang.String" default-value="">${excludeTypes}</excludeTypes>
        <includeArtifactIds implementation="java.lang.String" default-value="">${includeArtifactIds}</includeArtifactIds>
        <includeClassifiers implementation="java.lang.String" default-value="">${includeClassifiers}</includeClassifiers>
        <includeGroupIds implementation="java.lang.String" default-value="">${includeGroupIds}</includeGroupIds>
        <includeParents implementation="boolean" default-value="false">${includeParents}</includeParents>
        <includeScope implementation="java.lang.String" default-value="">${includeScope}</includeScope>
        <includeTypes implementation="java.lang.String" default-value="">${includeTypes}</includeTypes>
        <markersDirectory implementation="java.io.File" default-value="${project.build.directory}/dependency-maven-plugin-markers">${markersDirectory}</markersDirectory>
        <outputAbsoluteArtifactFilename implementation="boolean" default-value="false">${outputAbsoluteArtifactFilename}</outputAbsoluteArtifactFilename>
        <outputFile implementation="java.io.File">${outputFile}</outputFile>
        <outputScope implementation="boolean" default-value="true">${mdep.outputScope}</outputScope>
        <overWriteIfNewer implementation="boolean" default-value="true">${overWriteIfNewer}</overWriteIfNewer>
        <overWriteReleases implementation="boolean" default-value="false">${overWriteReleases}</overWriteReleases>
        <overWriteSnapshots implementation="boolean" default-value="false">${overWriteSnapshots}</overWriteSnapshots>
        <prependGroupId implementation="boolean" default-value="false">${mdep.prependGroupId}</prependGroupId>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <reactorProjects implementation="java.util.List" default-value="${reactorProjects}"/>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <silent implementation="boolean" default-value="false">${silent}</silent>
        <skip implementation="boolean" default-value="false">${mdep.skip}</skip>
        <sort implementation="boolean" default-value="false">${sort}</sort>
        <type implementation="java.lang.String" default-value="">${type}</type>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.archiver.manager.ArchiverManager</role>
          <field-name>archiverManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.handler.manager.ArtifactHandlerManager</role>
          <field-name>artifactHandlerManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.dependencies.resolve.DependencyResolver</role>
          <field-name>dependencyResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.ProjectBuilder</role>
          <field-name>projectBuilder</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.repository.RepositoryManager</role>
          <field-name>repositoryManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>tree</goal>
      <description>Displays the dependency tree for this project. Multiple formats are supported: text (by default), but also
&lt;a href=&quot;https://en.wikipedia.org/wiki/DOT_language&quot;&gt;DOT&lt;/a&gt;,
&lt;a href=&quot;https://en.wikipedia.org/wiki/GraphML&quot;&gt;graphml&lt;/a&gt; and
&lt;a href=&quot;https://en.wikipedia.org/wiki/Trivial_Graph_Format&quot;&gt;TGF&lt;/a&gt;.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.maven.plugins.dependency.tree.TreeMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.0-alpha-5</since>
      <requiresDependencyCollection>test</requiresDependencyCollection>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>appendOutput</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to append outputs into the output file or overwrite it.</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.lang.String</type>
          <since>2.0-alpha-6</since>
          <required>false</required>
          <editable>true</editable>
          <description>A comma-separated list of artifacts to filter from the serialized dependency tree, or &lt;code&gt;null&lt;/code&gt; not to
filter any artifacts from the dependency tree. The filter syntax is:

&lt;pre&gt;
[groupId]:[artifactId]:[type]:[version]
&lt;/pre&gt;

where each pattern segment is optional and supports full and partial &lt;code&gt;*&lt;/code&gt; wildcards. An empty pattern
segment is treated as an implicit wildcard.
&lt;p&gt;
For example, &lt;code&gt;org.apache.*&lt;/code&gt; will match all artifacts whose group id starts with
&lt;code&gt;org.apache.&lt;/code&gt;, and &lt;code&gt;:::*-SNAPSHOT&lt;/code&gt; will match all snapshot artifacts.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>includes</name>
          <type>java.lang.String</type>
          <since>2.0-alpha-6</since>
          <required>false</required>
          <editable>true</editable>
          <description>A comma-separated list of artifacts to filter the serialized dependency tree by, or &lt;code&gt;null&lt;/code&gt; not to
filter the dependency tree. The filter syntax is:

&lt;pre&gt;
[groupId]:[artifactId]:[type]:[version]
&lt;/pre&gt;

where each pattern segment is optional and supports full and partial &lt;code&gt;*&lt;/code&gt; wildcards. An empty pattern
segment is treated as an implicit wildcard.
&lt;p&gt;
For example, &lt;code&gt;org.apache.*&lt;/code&gt; will match all artifacts whose group id starts with
&lt;code&gt;org.apache.&lt;/code&gt;, and &lt;code&gt;:::*-SNAPSHOT&lt;/code&gt; will match all snapshot artifacts.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>outputFile</name>
          <type>java.io.File</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>true</editable>
          <description>If specified, this parameter will cause the dependency tree to be written to the path specified, instead of
writing to the console.</description>
        </parameter>
        <parameter>
          <name>outputType</name>
          <type>java.lang.String</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>If specified, this parameter will cause the dependency tree to be written using the specified format. Currently
supported format are: &lt;code&gt;text&lt;/code&gt; (default), &lt;code&gt;dot&lt;/code&gt;, &lt;code&gt;graphml&lt;/code&gt; and &lt;code&gt;tgf&lt;/code&gt;.
These additional formats can be plotted to image files.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>reactorProjects</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>Contains the full list of projects in the reactor.</description>
        </parameter>
        <parameter>
          <name>scope</name>
          <type>java.lang.String</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>true</editable>
          <description>The scope to filter by when resolving the dependency tree, or &lt;code&gt;null&lt;/code&gt; to include dependencies from all
scopes. Note that this feature does not currently work due to MSHARED-4</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>tokens</name>
          <type>java.lang.String</type>
          <since>2.0-alpha-6</since>
          <required>false</required>
          <editable>true</editable>
          <description>The token set name to use when outputting the dependency tree. Possible values are &lt;code&gt;whitespace&lt;/code&gt;,
&lt;code&gt;standard&lt;/code&gt; or &lt;code&gt;extended&lt;/code&gt;, which use whitespace, standard (ie ASCII) or extended character
sets respectively.</description>
        </parameter>
        <parameter>
          <name>verbose</name>
          <type>boolean</type>
          <since>2.0-alpha-6</since>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to include omitted nodes in the serialized dependency tree. Notice this feature actually uses Maven 2
algorithm and &lt;a href=&quot;https://maven.apache.org/shared/maven-dependency-tree/&quot;&gt;may give wrong results when used
with Maven 3&lt;/a&gt;.</description>
        </parameter>
      </parameters>
      <configuration>
        <appendOutput implementation="boolean" default-value="false">${appendOutput}</appendOutput>
        <excludes implementation="java.lang.String">${excludes}</excludes>
        <includes implementation="java.lang.String">${includes}</includes>
        <outputFile implementation="java.io.File">${outputFile}</outputFile>
        <outputType implementation="java.lang.String" default-value="text">${outputType}</outputType>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <reactorProjects implementation="java.util.List" default-value="${reactorProjects}"/>
        <scope implementation="java.lang.String">${scope}</scope>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <skip implementation="boolean" default-value="false">${skip}</skip>
        <tokens implementation="java.lang.String" default-value="standard">${tokens}</tokens>
        <verbose implementation="boolean" default-value="false">${verbose}</verbose>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.shared.dependency.graph.DependencyGraphBuilder</role>
          <role-hint>default</role-hint>
          <field-name>dependencyGraphBuilder</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>unpack</goal>
      <description>Goal that retrieves a list of artifacts from the repository and unpacks them in a defined location.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-sources</phase>
      <implementation>org.apache.maven.plugins.dependency.fromConfiguration.UnpackMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>1.0</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>artifact</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The artifact to unpack from command line. A string of the form
&lt;code&gt;groupId:artifactId:version[:packaging[:classifier]]&lt;/code&gt;. Use {@link #artifactItems} within the POM
configuration.</description>
        </parameter>
        <parameter>
          <name>artifactItems</name>
          <type>java.util.List</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Collection of ArtifactItems to work on. (ArtifactItem contains groupId, artifactId, version, type, classifier,
outputDirectory, destFileName, overWrite and encoding.) See &lt;a href=&quot;./usage.html&quot;&gt;Usage&lt;/a&gt; for details.</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.lang.String</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>true</editable>
          <description>A comma separated list of file patterns to exclude when unpacking the artifact. i.e. **\/*.xml,**\/*.properties
&lt;code&gt;**&amp;#47;*.xml,**&amp;#47;*.properties&lt;/code&gt; NOTE: Excludes patterns override the includes. (component code =
&lt;code&gt;return isIncluded( name ) AND !isExcluded( name );&lt;/code&gt;)</description>
        </parameter>
        <parameter>
          <name>fileMappers</name>
          <type>org.codehaus.plexus.components.io.filemappers.FileMapper[]</type>
          <since>3.1.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>{@link FileMapper} to be used for rewriting each target path, or {@code null} if no rewriting shall happen.</description>
        </parameter>
        <parameter>
          <name>ignorePermissions</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>ignore to set file permissions when unpacking a dependency</description>
        </parameter>
        <parameter>
          <name>includes</name>
          <type>java.lang.String</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>true</editable>
          <description>A comma separated list of file patterns to include when unpacking the artifact. i.e.
&lt;code&gt;**&amp;#47;*.xml,**&amp;#47;*.properties&lt;/code&gt; NOTE: Excludes patterns override the includes. (component code =
&lt;code&gt;return isIncluded( name ) AND !isExcluded( name );&lt;/code&gt;)</description>
        </parameter>
        <parameter>
          <name>localRepositoryDirectory</name>
          <type>java.io.File</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Path to override default local repository during plugin&apos;s execution. To remove all downloaded artifacts as part
of the build, set this value to a location under your project&apos;s target directory</description>
        </parameter>
        <parameter>
          <name>markersDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Directory to store flag files after unpack</description>
        </parameter>
        <parameter>
          <name>outputAbsoluteArtifactFilename</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output absolute filename for resolved artifacts</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Default output location used for mojo, unless overridden in ArtifactItem.</description>
        </parameter>
        <parameter>
          <name>overWriteIfNewer</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite if newer</description>
        </parameter>
        <parameter>
          <name>overWriteReleases</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite release artifacts</description>
        </parameter>
        <parameter>
          <name>overWriteSnapshots</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite snapshot artifacts</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>POM</description>
        </parameter>
        <parameter>
          <name>reactorProjects</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>Contains the full list of projects in the reactor.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>Remote repositories which will be searched for artifacts.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven session</description>
        </parameter>
        <parameter>
          <name>silent</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If the plugin should be silent.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>useJvmChmod</name>
          <type>boolean</type>
          <since>2.5.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
will use the jvm chmod, this is available for user and all level group level will be ignored
&lt;/p&gt;
&lt;b&gt;since 2.6 is on by default&lt;/b&gt;</description>
        </parameter>
      </parameters>
      <configuration>
        <artifact implementation="java.lang.String">${artifact}</artifact>
        <excludes implementation="java.lang.String">${mdep.unpack.excludes}</excludes>
        <fileMappers implementation="org.codehaus.plexus.components.io.filemappers.FileMapper[]">${mdep.unpack.filemappers}</fileMappers>
        <ignorePermissions implementation="boolean" default-value="false">${dependency.ignorePermissions}</ignorePermissions>
        <includes implementation="java.lang.String">${mdep.unpack.includes}</includes>
        <markersDirectory implementation="java.io.File" default-value="${project.build.directory}/dependency-maven-plugin-markers"/>
        <outputAbsoluteArtifactFilename implementation="boolean" default-value="false">${outputAbsoluteArtifactFilename}</outputAbsoluteArtifactFilename>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}/dependency">${outputDirectory}</outputDirectory>
        <overWriteIfNewer implementation="boolean" default-value="true">${mdep.overIfNewer}</overWriteIfNewer>
        <overWriteReleases implementation="boolean" default-value="false">${mdep.overWriteReleases}</overWriteReleases>
        <overWriteSnapshots implementation="boolean" default-value="false">${mdep.overWriteSnapshots}</overWriteSnapshots>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <reactorProjects implementation="java.util.List" default-value="${reactorProjects}"/>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <silent implementation="boolean" default-value="false">${silent}</silent>
        <skip implementation="boolean" default-value="false">${mdep.skip}</skip>
        <useJvmChmod implementation="boolean" default-value="true">${dependency.useJvmChmod}</useJvmChmod>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.archiver.manager.ArchiverManager</role>
          <field-name>archiverManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.handler.manager.ArtifactHandlerManager</role>
          <field-name>artifactHandlerManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.repository.RepositoryManager</role>
          <field-name>repositoryManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>unpack-dependencies</goal>
      <description>Goal that unpacks the project dependencies from the repository to a defined location.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-sources</phase>
      <implementation>org.apache.maven.plugins.dependency.fromDependencies.UnpackDependenciesMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>1.0</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>classifier</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify classifier to look for. Example: sources</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <since>3.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Encoding of artifacts.</description>
        </parameter>
        <parameter>
          <name>excludeArtifactIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of Artifact names to exclude.</description>
        </parameter>
        <parameter>
          <name>excludeClassifiers</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Classifiers to exclude. Empty String indicates don&apos;t exclude anything (default).</description>
        </parameter>
        <parameter>
          <name>excludeGroupIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of GroupId Names to exclude.</description>
        </parameter>
        <parameter>
          <name>excludeScope</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Scope to exclude. An Empty string indicates no scopes (default).</description>
        </parameter>
        <parameter>
          <name>excludeTransitive</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If we should exclude transitive dependencies</description>
        </parameter>
        <parameter>
          <name>excludeTypes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Types to exclude. Empty String indicates don&apos;t exclude anything (default).</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>A comma separated list of file patterns to exclude when unpacking the artifact. i.e.
&lt;code&gt;**&amp;#47;*.xml,**&amp;#47;*.properties&lt;/code&gt; NOTE: Excludes patterns override the includes. (component code =
&lt;code&gt;return isIncluded( name ) AND !isExcluded( name );&lt;/code&gt;)</description>
        </parameter>
        <parameter>
          <name>failOnMissingClassifierArtifact</name>
          <type>boolean</type>
          <since>2.0-alpha-2</since>
          <required>false</required>
          <editable>true</editable>
          <description>This only applies if the classifier parameter is used.</description>
        </parameter>
        <parameter>
          <name>fileMappers</name>
          <type>org.codehaus.plexus.components.io.filemappers.FileMapper[]</type>
          <since>3.1.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>{@link FileMapper}s to be used for rewriting each target path, or {@code null} if no rewriting shall happen.</description>
        </parameter>
        <parameter>
          <name>ignorePermissions</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>ignore to set file permissions when unpacking a dependency</description>
        </parameter>
        <parameter>
          <name>includeArtifactIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of Artifact names to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeClassifiers</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Classifiers to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeGroupIds</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of GroupIds to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includeScope</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Scope to include. An Empty string indicates all scopes (default). The scopes being interpreted are the scopes as
Maven sees them, not as specified in the pom. In summary:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;runtime&lt;/code&gt; scope gives runtime and compile dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compile&lt;/code&gt; scope gives compile, provided, and system dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test&lt;/code&gt; (default) scope gives all dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;provided&lt;/code&gt; scope just gives provided dependencies,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system&lt;/code&gt; scope just gives system dependencies.&lt;/li&gt;
&lt;/ul&gt;</description>
        </parameter>
        <parameter>
          <name>includeTypes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Comma Separated list of Types to include. Empty String indicates include everything (default).</description>
        </parameter>
        <parameter>
          <name>includes</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>A comma separated list of file patterns to include when unpacking the artifact. i.e.
&lt;code&gt;**&amp;#47;*.xml,**&amp;#47;*.properties&lt;/code&gt; NOTE: Excludes patterns override the includes. (component code =
&lt;code&gt;return isIncluded( name ) AND !isExcluded( name );&lt;/code&gt;)</description>
        </parameter>
        <parameter>
          <name>markersDirectory</name>
          <type>java.io.File</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Directory to store flag files</description>
        </parameter>
        <parameter>
          <name>outputAbsoluteArtifactFilename</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output absolute filename for resolved artifacts</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output location.</description>
        </parameter>
        <parameter>
          <name>overWriteIfNewer</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite artifacts that don&apos;t exist or are older than the source.</description>
        </parameter>
        <parameter>
          <name>overWriteReleases</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite release artifacts</description>
        </parameter>
        <parameter>
          <name>overWriteSnapshots</name>
          <type>boolean</type>
          <since>1.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite snapshot artifacts</description>
        </parameter>
        <parameter>
          <name>prependGroupId</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Prepend the groupId during copy.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>POM</description>
        </parameter>
        <parameter>
          <name>reactorProjects</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>Contains the full list of projects in the reactor.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>Remote repositories which will be searched for artifacts.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven session</description>
        </parameter>
        <parameter>
          <name>silent</name>
          <type>boolean</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>If the plugin should be silent.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>stripClassifier</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Strip artifact classifier during copy</description>
        </parameter>
        <parameter>
          <name>stripVersion</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Strip artifact version during copy</description>
        </parameter>
        <parameter>
          <name>type</name>
          <type>java.lang.String</type>
          <since>2.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify type to look for when constructing artifact based on classifier. Example: java-source,jar,war</description>
        </parameter>
        <parameter>
          <name>useJvmChmod</name>
          <type>boolean</type>
          <since>2.5.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
will use the jvm chmod, this is available for user and all level group level will be ignored
&lt;/p&gt;
&lt;b&gt;since 2.6 is on by default&lt;/b&gt;</description>
        </parameter>
        <parameter>
          <name>useRepositoryLayout</name>
          <type>boolean</type>
          <since>2.0-alpha-2</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Place each artifact in the same directory layout as a default repository.
&lt;/p&gt;
&lt;p&gt;
example:
&lt;/p&gt;

&lt;pre&gt;
  /outputDirectory/junit/junit/3.8.1/junit-3.8.1.jar
&lt;/pre&gt;</description>
        </parameter>
        <parameter>
          <name>useSubDirectoryPerArtifact</name>
          <type>boolean</type>
          <since>2.0-alpha-1</since>
          <required>false</required>
          <editable>true</editable>
          <description>Place each file in a separate subdirectory. (example &lt;code&gt;/outputDirectory/junit-3.8.1-jar&lt;/code&gt;)</description>
        </parameter>
        <parameter>
          <name>useSubDirectoryPerScope</name>
          <type>boolean</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Place each type of file in a separate subdirectory. (example /outputDirectory/runtime /outputDirectory/provided
etc)</description>
        </parameter>
        <parameter>
          <name>useSubDirectoryPerType</name>
          <type>boolean</type>
          <since>2.0-alpha-1</since>
          <required>false</required>
          <editable>true</editable>
          <description>Place each type of file in a separate subdirectory. (example /outputDirectory/jars /outputDirectory/wars etc)</description>
        </parameter>
      </parameters>
      <configuration>
        <classifier implementation="java.lang.String" default-value="">${classifier}</classifier>
        <encoding implementation="java.lang.String">${mdep.unpack.encoding}</encoding>
        <excludeArtifactIds implementation="java.lang.String" default-value="">${excludeArtifactIds}</excludeArtifactIds>
        <excludeClassifiers implementation="java.lang.String" default-value="">${excludeClassifiers}</excludeClassifiers>
        <excludeGroupIds implementation="java.lang.String" default-value="">${excludeGroupIds}</excludeGroupIds>
        <excludeScope implementation="java.lang.String" default-value="">${excludeScope}</excludeScope>
        <excludeTransitive implementation="boolean" default-value="false">${excludeTransitive}</excludeTransitive>
        <excludeTypes implementation="java.lang.String" default-value="">${excludeTypes}</excludeTypes>
        <excludes implementation="java.lang.String">${mdep.unpack.excludes}</excludes>
        <failOnMissingClassifierArtifact implementation="boolean" default-value="false">${mdep.failOnMissingClassifierArtifact}</failOnMissingClassifierArtifact>
        <fileMappers implementation="org.codehaus.plexus.components.io.filemappers.FileMapper[]">${mdep.unpack.filemappers}</fileMappers>
        <ignorePermissions implementation="boolean" default-value="false">${dependency.ignorePermissions}</ignorePermissions>
        <includeArtifactIds implementation="java.lang.String" default-value="">${includeArtifactIds}</includeArtifactIds>
        <includeClassifiers implementation="java.lang.String" default-value="">${includeClassifiers}</includeClassifiers>
        <includeGroupIds implementation="java.lang.String" default-value="">${includeGroupIds}</includeGroupIds>
        <includeScope implementation="java.lang.String" default-value="">${includeScope}</includeScope>
        <includeTypes implementation="java.lang.String" default-value="">${includeTypes}</includeTypes>
        <includes implementation="java.lang.String">${mdep.unpack.includes}</includes>
        <markersDirectory implementation="java.io.File" default-value="${project.build.directory}/dependency-maven-plugin-markers">${markersDirectory}</markersDirectory>
        <outputAbsoluteArtifactFilename implementation="boolean" default-value="false">${outputAbsoluteArtifactFilename}</outputAbsoluteArtifactFilename>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}/dependency">${outputDirectory}</outputDirectory>
        <overWriteIfNewer implementation="boolean" default-value="true">${overWriteIfNewer}</overWriteIfNewer>
        <overWriteReleases implementation="boolean" default-value="false">${overWriteReleases}</overWriteReleases>
        <overWriteSnapshots implementation="boolean" default-value="false">${overWriteSnapshots}</overWriteSnapshots>
        <prependGroupId implementation="boolean" default-value="false">${mdep.prependGroupId}</prependGroupId>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <reactorProjects implementation="java.util.List" default-value="${reactorProjects}"/>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <silent implementation="boolean" default-value="false">${silent}</silent>
        <skip implementation="boolean" default-value="false">${mdep.skip}</skip>
        <stripClassifier implementation="boolean" default-value="false">${mdep.stripClassifier}</stripClassifier>
        <stripVersion implementation="boolean" default-value="false">${mdep.stripVersion}</stripVersion>
        <type implementation="java.lang.String" default-value="">${type}</type>
        <useJvmChmod implementation="boolean" default-value="true">${dependency.useJvmChmod}</useJvmChmod>
        <useRepositoryLayout implementation="boolean" default-value="false">${mdep.useRepositoryLayout}</useRepositoryLayout>
        <useSubDirectoryPerArtifact implementation="boolean" default-value="false">${mdep.useSubDirectoryPerArtifact}</useSubDirectoryPerArtifact>
        <useSubDirectoryPerScope implementation="boolean" default-value="false">${mdep.useSubDirectoryPerScope}</useSubDirectoryPerScope>
        <useSubDirectoryPerType implementation="boolean" default-value="false">${mdep.useSubDirectoryPerType}</useSubDirectoryPerType>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.archiver.manager.ArchiverManager</role>
          <field-name>archiverManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.handler.manager.ArtifactHandlerManager</role>
          <field-name>artifactHandlerManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.dependencies.resolve.DependencyResolver</role>
          <field-name>dependencyResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.ProjectBuilder</role>
          <field-name>projectBuilder</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.repository.RepositoryManager</role>
          <field-name>repositoryManager</field-name>
        </requirement>
      </requirements>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model-builder</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-plexus</artifactId>
      <type>jar</type>
      <version>1.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-bean</artifactId>
      <type>jar</type>
      <version>1.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-guice</artifactId>
      <type>jar</type>
      <version>2.1.7</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>2.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings-builder</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-aether-provider</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-impl</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-api</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-util</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>2.2.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-sec-dispatcher</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-cipher</artifactId>
      <type>jar</type>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.reporting</groupId>
      <artifactId>maven-reporting-api</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.reporting</groupId>
      <artifactId>maven-reporting-impl</artifactId>
      <type>jar</type>
      <version>3.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-decoration-model</artifactId>
      <type>jar</type>
      <version>1.7.4</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <type>jar</type>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-sink-api</artifactId>
      <type>jar</type>
      <version>1.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-logging-api</artifactId>
      <type>jar</type>
      <version>1.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-core</artifactId>
      <type>jar</type>
      <version>1.9</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-container-default</artifactId>
      <type>jar</type>
      <version>1.7.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.xbean</groupId>
      <artifactId>xbean-reflect</artifactId>
      <type>jar</type>
      <version>3.7</version>
    </dependency>
    <dependency>
      <groupId>com.google.collections</groupId>
      <artifactId>google-collections</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <type>jar</type>
      <version>3.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <type>jar</type>
      <version>4.5.8</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <type>jar</type>
      <version>4.4.11</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-site-renderer</artifactId>
      <type>jar</type>
      <version>1.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-skin-model</artifactId>
      <type>jar</type>
      <version>1.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-module-xhtml</artifactId>
      <type>jar</type>
      <version>1.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-module-xhtml5</artifactId>
      <type>jar</type>
      <version>1.9</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-i18n</artifactId>
      <type>jar</type>
      <version>1.0-beta-10</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-velocity</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity-tools</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <type>jar</type>
      <version>1.7.0</version>
    </dependency>
    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
      <type>jar</type>
      <version>1.8</version>
    </dependency>
    <dependency>
      <groupId>commons-chain</groupId>
      <artifactId>commons-chain</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
      <type>jar</type>
      <version>1.3.1</version>
    </dependency>
    <dependency>
      <groupId>dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>oro</groupId>
      <artifactId>oro</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>sslext</groupId>
      <artifactId>sslext</artifactId>
      <type>jar</type>
      <version>1.2-0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.struts</groupId>
      <artifactId>struts-core</artifactId>
      <type>jar</type>
      <version>1.3.8</version>
    </dependency>
    <dependency>
      <groupId>antlr</groupId>
      <artifactId>antlr</artifactId>
      <type>jar</type>
      <version>2.7.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.struts</groupId>
      <artifactId>struts-taglib</artifactId>
      <type>jar</type>
      <version>1.3.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.struts</groupId>
      <artifactId>struts-tiles</artifactId>
      <type>jar</type>
      <version>1.3.8</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-archiver</artifactId>
      <type>jar</type>
      <version>4.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
      <type>jar</type>
      <version>1.20</version>
    </dependency>
    <dependency>
      <groupId>org.iq80.snappy</groupId>
      <artifactId>snappy</artifactId>
      <type>jar</type>
      <version>0.4</version>
    </dependency>
    <dependency>
      <groupId>org.tukaani</groupId>
      <artifactId>xz</artifactId>
      <type>jar</type>
      <version>1.8</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>3.3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>file-management</artifactId>
      <type>jar</type>
      <version>3.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-shared-io</artifactId>
      <type>jar</type>
      <version>3.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-io</artifactId>
      <type>jar</type>
      <version>3.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-dependency-analyzer</artifactId>
      <type>jar</type>
      <version>1.11.1</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <type>jar</type>
      <version>7.3.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-dependency-tree</artifactId>
      <type>jar</type>
      <version>3.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-util</artifactId>
      <type>jar</type>
      <version>0.9.0.M2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-common-artifact-filters</artifactId>
      <type>jar</type>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-artifact-transfer</artifactId>
      <type>jar</type>
      <version>0.11.0</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <type>jar</type>
      <version>1.11</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <type>jar</type>
      <version>1.7.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-shared-utils</artifactId>
      <type>jar</type>
      <version>3.2.1</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <type>jar</type>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <type>jar</type>
      <version>3.2.2</version>
    </dependency>
    <dependency>
      <groupId>classworlds</groupId>
      <artifactId>classworlds</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-spi</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
  </dependencies>
</plugin>