<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.5 -->

<plugin>
  <name>Apache Maven Dependency Plugin</name>
  <description>Provides utility goals to work with dependencies like copying, unpacking, analyzing, resolving and many more.</description>
  <groupId>com.hua</groupId>
  <artifactId>maven-plugin-custom</artifactId>
  <version>1.0.0</version>
  <goalPrefix>custom</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
    <!-- 这里指定暂时没有起作用 -->
      <goal>customMojo</goal>
      <description>Analyzes the dependencies of this project and determines which are: used and declared; used and undeclared; unused
and declared. This goal is intended to be used standalone, thus it always executes the &lt;code&gt;test-compile&lt;/code&gt;
phase - use the &lt;code&gt;dependency:analyze-only&lt;/code&gt; goal instead when participating in the build lifecycle.
&lt;p&gt;
By default, &lt;a href=&quot;http://maven.apache.org/shared/maven-dependency-analyzer/&quot;&gt;maven-dependency-analyzer&lt;/a&gt; is used
to perform the analysis, with limitations due to the fact that it works at bytecode level, but any analyzer can be
plugged in through &lt;code&gt;analyzer&lt;/code&gt; parameter.
&lt;/p&gt;</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <executePhase>test-compile</executePhase>
      <implementation>org.apache.maven.plugins.dependency.analyze.AnalyzeMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.0-alpha-3</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>analyzer</name>
          <type>java.lang.String</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specify the project dependency analyzer to use (plexus component role-hint). By default,
&lt;a href=&quot;/shared/maven-dependency-analyzer/&quot;&gt;maven-dependency-analyzer&lt;/a&gt; is used. To use this, you must declare
a dependency for this plugin that contains the code for the analyzer. The analyzer must have a declared Plexus
role name, and you specify the role name here.</description>
        </parameter>
        <parameter>
          <name>baseDir</name>
          <type>java.io.File</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>false</editable>
          <description>Flag to use for scriptable output</description>
        </parameter>
        <parameter>
          <name>failOnWarning</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to fail the build if a dependency warning is found.</description>
        </parameter>
        <parameter>
          <name>ignoreNonCompile</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Ignore Runtime/Provided/Test/System scopes for unused dependency analysis.</description>
        </parameter>
        <parameter>
          <name>ignoredDependencies</name>
          <type>java.lang.String[]</type>
          <since>2.10</since>
          <required>false</required>
          <editable>true</editable>
          <description>List of dependencies that will be ignored. Any dependency on this list will be excluded from the &quot;declared but
unused&quot; and the &quot;used but undeclared&quot; list. The filter syntax is:

&lt;pre&gt;
[groupId]:[artifactId]:[type]:[version]
&lt;/pre&gt;

where each pattern segment is optional and supports full and partial &lt;code&gt;*&lt;/code&gt; wildcards. An empty pattern
segment is treated as an implicit wildcard. *
&lt;p&gt;
For example, &lt;code&gt;org.apache.*&lt;/code&gt; will match all artifacts whose group id starts with
&lt;code&gt;org.apache.&lt;/code&gt;, and &lt;code&gt;:::*-SNAPSHOT&lt;/code&gt; will match all snapshot artifacts.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>ignoredUnusedDeclaredDependencies</name>
          <type>java.lang.String[]</type>
          <since>2.10</since>
          <required>false</required>
          <editable>true</editable>
          <description>List of dependencies that will be ignored if they are declared but unused. The filter syntax is:

&lt;pre&gt;
[groupId]:[artifactId]:[type]:[version]
&lt;/pre&gt;

where each pattern segment is optional and supports full and partial &lt;code&gt;*&lt;/code&gt; wildcards. An empty pattern
segment is treated as an implicit wildcard. *
&lt;p&gt;
For example, &lt;code&gt;org.apache.*&lt;/code&gt; will match all artifacts whose group id starts with
&lt;code&gt;org.apache.&lt;/code&gt;, and &lt;code&gt;:::*-SNAPSHOT&lt;/code&gt; will match all snapshot artifacts.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>ignoredUsedUndeclaredDependencies</name>
          <type>java.lang.String[]</type>
          <since>2.10</since>
          <required>false</required>
          <editable>true</editable>
          <description>List of dependencies that will be ignored if they are used but undeclared. The filter syntax is:

&lt;pre&gt;
[groupId]:[artifactId]:[type]:[version]
&lt;/pre&gt;

where each pattern segment is optional and supports full and partial &lt;code&gt;*&lt;/code&gt; wildcards. An empty pattern
segment is treated as an implicit wildcard. *
&lt;p&gt;
For example, &lt;code&gt;org.apache.*&lt;/code&gt; will match all artifacts whose group id starts with
&lt;code&gt;org.apache.&lt;/code&gt;, and &lt;code&gt;:::*-SNAPSHOT&lt;/code&gt; will match all snapshot artifacts.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>false</editable>
          <description>Target folder</description>
        </parameter>
        <parameter>
          <name>outputXML</name>
          <type>boolean</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output the xml for the missing dependencies (used but not declared).</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project to analyze.</description>
        </parameter>
        <parameter>
          <name>scriptableFlag</name>
          <type>java.lang.String</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Flag to use for scriptable output.</description>
        </parameter>
        <parameter>
          <name>scriptableOutput</name>
          <type>boolean</type>
          <since>2.0-alpha-5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Output scriptable values for the missing dependencies (used but not declared).</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Skip plugin execution completely.</description>
        </parameter>
        <parameter>
          <name>usedDependencies</name>
          <type>java.lang.String[]</type>
          <since>2.6</since>
          <required>false</required>
          <editable>true</editable>
          <description>Force dependencies as used, to override incomplete result caused by bytecode-level analysis. Dependency format is
&lt;code&gt;groupId:artifactId&lt;/code&gt;.</description>
        </parameter>
        <parameter>
          <name>verbose</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Output used dependencies.</description>
        </parameter>
      </parameters>
      <configuration>
        <analyzer implementation="java.lang.String" default-value="default">${analyzer}</analyzer>
        <baseDir implementation="java.io.File" default-value="${basedir}"/>
        <failOnWarning implementation="boolean" default-value="false">${failOnWarning}</failOnWarning>
        <ignoreNonCompile implementation="boolean" default-value="false">${ignoreNonCompile}</ignoreNonCompile>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}"/>
        <outputXML implementation="boolean" default-value="false">${outputXML}</outputXML>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <scriptableFlag implementation="java.lang.String" default-value="$$$%%%">${scriptableFlag}</scriptableFlag>
        <scriptableOutput implementation="boolean" default-value="false">${scriptableOutput}</scriptableOutput>
        <skip implementation="boolean" default-value="false">${mdep.analyze.skip}</skip>
        <verbose implementation="boolean" default-value="false">${verbose}</verbose>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model-builder</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-plexus</artifactId>
      <type>jar</type>
      <version>1.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-bean</artifactId>
      <type>jar</type>
      <version>1.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-guice</artifactId>
      <type>jar</type>
      <version>2.1.7</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>2.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings-builder</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-aether-provider</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-impl</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-api</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-util</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>2.2.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-sec-dispatcher</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-cipher</artifactId>
      <type>jar</type>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.reporting</groupId>
      <artifactId>maven-reporting-api</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.reporting</groupId>
      <artifactId>maven-reporting-impl</artifactId>
      <type>jar</type>
      <version>3.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-decoration-model</artifactId>
      <type>jar</type>
      <version>1.7.4</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <type>jar</type>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-sink-api</artifactId>
      <type>jar</type>
      <version>1.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-logging-api</artifactId>
      <type>jar</type>
      <version>1.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-core</artifactId>
      <type>jar</type>
      <version>1.9</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-container-default</artifactId>
      <type>jar</type>
      <version>1.7.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.xbean</groupId>
      <artifactId>xbean-reflect</artifactId>
      <type>jar</type>
      <version>3.7</version>
    </dependency>
    <dependency>
      <groupId>com.google.collections</groupId>
      <artifactId>google-collections</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <type>jar</type>
      <version>3.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <type>jar</type>
      <version>4.5.8</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <type>jar</type>
      <version>4.4.11</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-site-renderer</artifactId>
      <type>jar</type>
      <version>1.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-skin-model</artifactId>
      <type>jar</type>
      <version>1.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-module-xhtml</artifactId>
      <type>jar</type>
      <version>1.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-module-xhtml5</artifactId>
      <type>jar</type>
      <version>1.9</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-i18n</artifactId>
      <type>jar</type>
      <version>1.0-beta-10</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-velocity</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity-tools</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <type>jar</type>
      <version>1.7.0</version>
    </dependency>
    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
      <type>jar</type>
      <version>1.8</version>
    </dependency>
    <dependency>
      <groupId>commons-chain</groupId>
      <artifactId>commons-chain</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
      <type>jar</type>
      <version>1.3.1</version>
    </dependency>
    <dependency>
      <groupId>dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>oro</groupId>
      <artifactId>oro</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>sslext</groupId>
      <artifactId>sslext</artifactId>
      <type>jar</type>
      <version>1.2-0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.struts</groupId>
      <artifactId>struts-core</artifactId>
      <type>jar</type>
      <version>1.3.8</version>
    </dependency>
    <dependency>
      <groupId>antlr</groupId>
      <artifactId>antlr</artifactId>
      <type>jar</type>
      <version>2.7.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.struts</groupId>
      <artifactId>struts-taglib</artifactId>
      <type>jar</type>
      <version>1.3.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.struts</groupId>
      <artifactId>struts-tiles</artifactId>
      <type>jar</type>
      <version>1.3.8</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-archiver</artifactId>
      <type>jar</type>
      <version>4.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
      <type>jar</type>
      <version>1.20</version>
    </dependency>
    <dependency>
      <groupId>org.iq80.snappy</groupId>
      <artifactId>snappy</artifactId>
      <type>jar</type>
      <version>0.4</version>
    </dependency>
    <dependency>
      <groupId>org.tukaani</groupId>
      <artifactId>xz</artifactId>
      <type>jar</type>
      <version>1.8</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>3.3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>file-management</artifactId>
      <type>jar</type>
      <version>3.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-shared-io</artifactId>
      <type>jar</type>
      <version>3.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-io</artifactId>
      <type>jar</type>
      <version>3.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-dependency-analyzer</artifactId>
      <type>jar</type>
      <version>1.11.1</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <type>jar</type>
      <version>7.3.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-dependency-tree</artifactId>
      <type>jar</type>
      <version>3.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-util</artifactId>
      <type>jar</type>
      <version>0.9.0.M2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-common-artifact-filters</artifactId>
      <type>jar</type>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-artifact-transfer</artifactId>
      <type>jar</type>
      <version>0.11.0</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <type>jar</type>
      <version>1.11</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <type>jar</type>
      <version>1.7.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-shared-utils</artifactId>
      <type>jar</type>
      <version>3.2.1</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <type>jar</type>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <type>jar</type>
      <version>3.2.2</version>
    </dependency>
    <dependency>
      <groupId>classworlds</groupId>
      <artifactId>classworlds</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-spi</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
  </dependencies>
</plugin>