<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.hua</groupId>
	<artifactId>build-entire</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>
	<name>build-entire</name>
	<description>build Maven Entire Project</description>

	<!-- 模块-子项目 -->
	<modules>
		<!-- 模板 -->
		<module>build-core</module>
		<module>build-template</module>
		<module>jenkins</module>
		<module>maven</module>
		<module>maven-assembly</module>
		<module>maven-github</module>
		<module>maven-plugin-compiler</module>
		<module>maven-plugin-custom</module>
		<module>maven-plugin-jacoco</module>
		<module>maven-plugin-resources</module>
		<module>maven-plugin-spring-boot</module>
		<module>maven-plugin-usage</module>
	</modules>

	<!-- 公共属性 -->
	<properties>
		<jdk.version>1.8</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<apache.ant.version>1.10.9</apache.ant.version>
		<maven.plugin.compiler.version>3.8.1</maven.plugin.compiler.version>
		<maven.plugin.source.version>3.2.1</maven.plugin.source.version>
		<maven.plugin.resources.version>3.2.0</maven.plugin.resources.version>
		<maven.plugin.surefire.version>3.0.0-M5</maven.plugin.surefire.version>
		<maven.plugin.assembly.version>2.5.5</maven.plugin.assembly.version>
		<build.version>1.0.0</build.version>
		<common.version>1.0.0</common.version>
		<com.hua.maven.version>1.0.0</com.hua.maven.version>
		<maven.custom-plugin.version>1.0.0</maven.custom-plugin.version>
		<maven.plugin.version>3.6.3</maven.plugin.version>
		<maven.plugin.annotation.version>3.6.0</maven.plugin.annotation.version>
		<maven.plugin-plugin.version>3.6.0</maven.plugin-plugin.version>
		<maven.plugin.clean.version>3.1.0</maven.plugin.clean.version>
		<maven.plugin.install.version>3.0.0-M1</maven.plugin.install.version>
		<maven.plugin.dependency.version>3.1.2</maven.plugin.dependency.version>
		<maven.plugin.spring-boot.version>2.3.8.RELEASE</maven.plugin.spring-boot.version>
		<jacoco.version>0.8.6</jacoco.version>
		<slf4j.version>2.0.0-alpha1</slf4j.version>
		<custom.name>哈哈哈ddd</custom.name>
 		<jmockit.version>1.46</jmockit.version>		
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.hua</groupId>
				<artifactId>build-core</artifactId>
				<version>${build.version}</version>
			</dependency>

			<!-- ant -->
			<dependency>
				<groupId>org.apache.ant</groupId>
				<artifactId>ant</artifactId>
				<version>${apache.ant.version}</version>
			</dependency>

			<dependency>
				<groupId>com.hua</groupId>
				<artifactId>common</artifactId>
				<version>${common.version}</version>
			</dependency>

			<dependency>
				<groupId>com.hua</groupId>
				<artifactId>maven</artifactId>
				<version>${com.hua.maven.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${maven.plugin.spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-core</artifactId>
				<version>${maven.plugin.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-plugin-api</artifactId>
				<version>${maven.plugin.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-compat</artifactId>
				<version>${maven.plugin.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-artifact</artifactId>
				<version>${maven.plugin.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-embedder</artifactId>
				<version>${maven.plugin.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.plugin.compiler.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.plugin.resources.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven.plugin.source.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven.plugin.clean.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>${maven.plugin.install.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven.plugin.dependency.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.maven.plugin-tools</groupId>
				<artifactId>maven-plugin-annotations</artifactId>
				<version>${maven.plugin.annotation.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<version>${maven.plugin-plugin.version}</version>
			</dependency>

			<dependency>
				<groupId>com.hua</groupId>
				<artifactId>maven-plugin-custom</artifactId>
				<version>${maven.custom-plugin.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>


	<!-- 公共构建 -->
	<build>
		<plugins>

			<!-- 编译插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.plugin.compiler.version}</version>
				<configuration>
					<compilerVersion>${jdk.version}</compilerVersion>
					<!-- 编译的类文件是否包含调试信息 -->
					<debug>true</debug>
					<!-- 是否展示详细的设置信息 -->
					<detail>true</detail>
					<!-- 指定编译文件的编码 -->
					<encoding>${project.build.sourceEncoding}</encoding>
					<!-- 编译失败是否停止 -->
					<failOnError>true</failOnError>
					<!-- 是否强制jdk版本 -->
					<forceJavacCompilerUse>true</forceJavacCompilerUse>
					<!-- 是否分开执行编译，设置为true会导致部分输出中文乱码 -->
					<fork>false</fork>
					<!-- 输出源码文件名 -->
					<outputFileName>a.jar</outputFileName>
					<!-- 源码位置是否显示过期api被使用 -->
					<showDeprecation>true</showDeprecation>
					<!-- 是否输出编译警告 -->
					<showWarnings>false</showWarnings>
					<!-- 忽略测试 -->
					<skip>true</skip>
					<!-- 是否忽略main源码 -->
					<skipMain>false</skipMain>
					<!-- main编译器版本 source 和 target 要保持一致 -->
					<source>${jdk.version}</source>
					<!-- main编译器版本 source 和 target 要保持一致 -->
					<target>${jdk.version}</target>
					<!-- 测试编译器版本 source 和 target 要保持一致 -->
					<testSource>${jdk.version}</testSource>
					<!-- 测试编译器版本 source 和 target 要保持一致 -->
					<testTarget>${jdk.version}</testTarget>
					<!-- 输出编译器详细运行信息 -->
					<verbose>false</verbose>

				</configuration>
			</plugin>

			<!-- 资源插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.plugin.resources.version}</version>
				<configuration>
					<!-- 指定文件的编码 -->
					<encoding>${project.build.sourceEncoding}</encoding>
					<!-- 包含空目录 -->
					<includeEmptyDirs>true</includeEmptyDirs>
					<!-- 是否直接覆盖 -->
					<overwrite>true</overwrite>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>resources</goal>
						</goals>
						<configuration>
							<includeEmptyDirs>true</includeEmptyDirs>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- 测试用例插件，打包当前项目相关文件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.plugin.surefire.version}</version>
				<configuration>
					<!-- 解决 控制台输出测试信息 - 乱码 -->
					<argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>
					<reuseForks>true</reuseForks>
					<!-- 打包时跳过单元测试 -->
					<skip>true</skip>
					<skipTests>true</skipTests>
					<!-- 忽略测试失败 -->
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>

			<!-- 要将源码放上去，需要加入这个插件 -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<configuration>
					<attach>true</attach>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>